<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20202.20.0525.1210                               -->
<workbook original-version='18.1' source-build='2020.2.1 (20202.20.0525.1210)' source-platform='mac' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelExtractV2.true...ObjectModelExtractV2 />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <_.fcp.SetMembershipControl.true...SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='18.1'>
      <aliases enabled='yes' />
      <column caption='Parameter 1' datatype='integer' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='20'>
        <calculation class='tableau' formula='20' />
        <range max='100' min='1' />
      </column>
    </datasource>
    <datasource caption='cov19_country_count_2' inline='true' name='federated.0axu3yq0bos93d101yqpk0yd5z2i' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='cov19_country_count_2' name='textscan.0upenzr0hd8r591e8cw710k1v3cp'>
            <connection class='textscan' directory='/Users/lancy/Desktop/data' filename='cov19_country_count_2.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.0upenzr0hd8r591e8cw710k1v3cp' name='cov19_country_count_2.csv' table='[cov19_country_count_2#csv]' type='table'>
          <columns character-set='UTF-8' header='no' locale='en_US' separator=','>
            <column datatype='string' name='F1' ordinal='0' />
            <column datatype='string' name='F2' ordinal='1' />
            <column datatype='integer' name='F3' ordinal='2' />
            <column datatype='integer' name='F4' ordinal='3' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.0upenzr0hd8r591e8cw710k1v3cp' name='cov19_country_count_2.csv' table='[cov19_country_count_2#csv]' type='table'>
          <columns character-set='UTF-8' header='no' locale='en_US' separator=','>
            <column datatype='string' name='F1' ordinal='0' />
            <column datatype='string' name='F2' ordinal='1' />
            <column datatype='integer' name='F3' ordinal='2' />
            <column datatype='integer' name='F4' ordinal='3' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[cov19_country_count_2.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;false&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F1</remote-name>
            <remote-type>129</remote-type>
            <local-name>[F1]</local-name>
            <parent-name>[cov19_country_count_2.csv]</parent-name>
            <remote-alias>F1</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cov19_country_count_2.csv_E5A17B5E6DAE407EB218A6C6CDA4F492]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F2</remote-name>
            <remote-type>129</remote-type>
            <local-name>[F2]</local-name>
            <parent-name>[cov19_country_count_2.csv]</parent-name>
            <remote-alias>F2</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cov19_country_count_2.csv_E5A17B5E6DAE407EB218A6C6CDA4F492]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F3</remote-name>
            <remote-type>20</remote-type>
            <local-name>[F3]</local-name>
            <parent-name>[cov19_country_count_2.csv]</parent-name>
            <remote-alias>F3</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cov19_country_count_2.csv_E5A17B5E6DAE407EB218A6C6CDA4F492]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F4</remote-name>
            <remote-type>20</remote-type>
            <local-name>[F4]</local-name>
            <parent-name>[cov19_country_count_2.csv]</parent-name>
            <remote-alias>F4</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cov19_country_count_2.csv_E5A17B5E6DAE407EB218A6C6CDA4F492]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='t' datatype='real' name='[Calculation_4228246797991231488]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(index()-25)/4'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='logistic' datatype='real' name='[Calculation_4228246797991317505]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='1/(1+EXP(1)^-[Calculation_4228246797991231488])'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Size' datatype='real' name='[Calculation_4228246797991481346]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='RUNNING_AVG(SUM([F3]))'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Rank1' datatype='real' name='[Calculation_4228246797991591939]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='RUNNING_SUM(SUM([F3]))/TOTAL(SUM([F3]))'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Rank2' datatype='real' name='[Calculation_4228246797991653380]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='RUNNING_SUM(SUM([F3]))/TOTAL(SUM([F3]))'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='F(t)' datatype='real' name='[Calculation_4228246797991718917]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Calculation_4228246797991591939]+(([Calculation_4228246797991653380]-[Calculation_4228246797991591939])*[Calculation_4228246797991317505])'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Country' datatype='string' name='[F1]' role='dimension' type='nominal' />
      <column caption='Type' datatype='string' name='[F2]' role='dimension' type='nominal' />
      <column caption='Number' datatype='integer' name='[F3]' role='measure' type='quantitative' />
      <column aggregation='None' caption='rowtype (1)' datatype='integer' name='[F4 (bin) 1]' role='dimension' type='ordinal'>
        <calculation class='bin' decimals='0' formula='[F4]' peg='0' size='1' />
      </column>
      <column aggregation='None' caption='rowtype' datatype='integer' name='[F4 (bin)]' role='dimension' type='ordinal'>
        <calculation class='bin' decimals='0' formula='[F4]' peg='0' size='1' />
      </column>
      <column datatype='integer' name='[F4]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='cov19_country_count_2.csv' datatype='table' name='[__tableau_internal_object_id__].[cov19_country_count_2.csv_E5A17B5E6DAE407EB218A6C6CDA4F492]' role='measure' type='quantitative' />
      <column-instance column='[F1]' derivation='None' name='[none:F1:nk]' pivot='key' type='nominal' />
      <column-instance column='[F2]' derivation='None' name='[none:F2:nk]' pivot='key' type='nominal' />
      <group caption='Action (Country)' hidden='true' name='[Action (Country)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[F1]' />
        </groupfilter>
      </group>
      <group caption='Action (Country,Type,rowtype)' hidden='true' name='[Action (Country,Type,rowtype)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[F1]' />
          <groupfilter function='level-members' level='[F2]' />
          <groupfilter function='level-members' level='[F4 (bin)]' />
        </groupfilter>
      </group>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:F2:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Active&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Recovered&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Deaths&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Confirmed&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:F1:nk]' palette='cyclic_10_0' type='palette'>
            <map to='#1ba3c6'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#1ca4c5'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#1ea6c4'>
              <bucket>&quot;Yemen&quot;</bucket>
            </map>
            <map to='#1fae81'>
              <bucket>&quot;South Korea&quot;</bucket>
            </map>
            <map to='#20a8c4'>
              <bucket>&quot;Western Sahara&quot;</bucket>
            </map>
            <map to='#20af84'>
              <bucket>&quot;South Sudan&quot;</bucket>
            </map>
            <map to='#21ad7c'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#22aac3'>
              <bucket>&quot;West Bank and Gaza&quot;</bucket>
            </map>
            <map to='#22b088'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#23ac77'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#23b18c'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#24acc3'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#25aec2'>
              <bucket>&quot;Venezuela&quot;</bucket>
            </map>
            <map to='#25b290'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#26ab73'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#26b494'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#27b0c1'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
            <map to='#28aa6e'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#28b598'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#29b2c1'>
              <bucket>&quot;US&quot;</bucket>
            </map>
            <map to='#29b69c'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#2ba96a'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#2bb4c0'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#2bb79f'>
              <bucket>&quot;Syria&quot;</bucket>
            </map>
            <map to='#2cb9a3'>
              <bucket>&quot;Taiwan*&quot;</bucket>
            </map>
            <map to='#2da865'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#2db6c0'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#2eb8bf'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#2ebaa7'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map>
            <map to='#30a761'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map>
            <map to='#30babf'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#30bbab'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
            <map to='#31bcaf'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#32a65c'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#32bcbe'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#33bdb3'>
              <bucket>&quot;Timor-Leste&quot;</bucket>
            </map>
            <map to='#34bebd'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#34bfb7'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#35a558'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#36c0bb'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#36c0bd'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#37a453'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#39a34f'>
              <bucket>&quot;Sao Tome and Principe&quot;</bucket>
            </map>
            <map to='#3ca24a'>
              <bucket>&quot;San Marino&quot;</bucket>
            </map>
            <map to='#3ea146'>
              <bucket>&quot;Saint Vincent and the Grenadines&quot;</bucket>
            </map>
            <map to='#41a041'>
              <bucket>&quot;Saint Lucia&quot;</bucket>
            </map>
            <map to='#439f3d'>
              <bucket>&quot;Saint Kitts and Nevis&quot;</bucket>
            </map>
            <map to='#489f3a'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#4f7cba'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#50a138'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='#537bba'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#577abb'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#58a336'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#5b79bb'>
              <bucket>&quot;Andorra&quot;</bucket>
            </map>
            <map to='#5f78bc'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#5fa535'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#6377bd'>
              <bucket>&quot;Antigua and Barbuda&quot;</bucket>
            </map>
            <map to='#67a733'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#6876bd'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#6c76be'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#6fa932'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#7075bf'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#7474bf'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#76ab30'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#7873c0'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#7d72c1'>
              <bucket>&quot;Bahamas&quot;</bucket>
            </map>
            <map to='#7ead2e'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#8171c1'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#8571c2'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#86af2d'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#8970c3'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#8d6fc3'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#8db12b'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map>
            <map to='#926ec3'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#95b32a'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#966ec3'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#9b6ec3'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#9db528'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#9f6dc2'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#a46dc2'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#a4b726'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#a86cc1'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#acb925'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#ad6cc1'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#b16cc1'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#b4bb23'>
              <bucket>&quot;North Macedonia&quot;</bucket>
            </map>
            <map to='#b66bc0'>
              <bucket>&quot;Brunei&quot;</bucket>
            </map>
            <map to='#ba6bc0'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#bf6abf'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#bfbc21'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#c36abf'>
              <bucket>&quot;Burma&quot;</bucket>
            </map>
            <map to='#c3bc21'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#c7bc21'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#c86abf'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#cbbb21'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#cc69be'>
              <bucket>&quot;Cabo Verde&quot;</bucket>
            </map>
            <map to='#cfbb21'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#d169be'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#d3bb21'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#d669be'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#d7bb21'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#d86abc'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#daba21'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#db6bbb'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='#dd6cba'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#deba21'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#df3029'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#df3227'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#e06db8'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#e1312d'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#e13725'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#e23131'>
              <bucket>&quot;Holy See&quot;</bucket>
            </map>
            <map to='#e26fb7'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#e2ba21'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#e33235'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#e33d24'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#e44223'>
              <bucket>&quot;Iran&quot;</bucket>
            </map>
            <map to='#e53339'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='#e570b6'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#e6343c'>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
            </map>
            <map to='#e64721'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#e6ba21'>
              <bucket>&quot;Monaco&quot;</bucket>
            </map>
            <map to='#e73540'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#e74c20'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#e871b4'>
              <bucket>&quot;Comoros&quot;</bucket>
            </map>
            <map to='#e93544'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#e9511f'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#ea3648'>
              <bucket>&quot;Grenada&quot;</bucket>
            </map>
            <map to='#ea72b3'>
              <bucket>&quot;Congo (Brazzaville)&quot;</bucket>
            </map>
            <map to='#eab921'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map>
            <map to='#eb374c'>
              <bucket>&quot;Greenland&quot;</bucket>
            </map>
            <map to='#eb571d'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#ec5c1c'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#ed384f'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#ed74b2'>
              <bucket>&quot;Congo (Kinshasa)&quot;</bucket>
            </map>
            <map to='#ee3853'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#ee611b'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#eeb921'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#ef3957'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#ef6619'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#ef75b1'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#f13a5b'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#f16c18'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#f23b5f'>
              <bucket>&quot;Gambia&quot;</bucket>
            </map>
            <map to='#f276af'>
              <bucket>&quot;Cote d&apos;Ivoire&quot;</bucket>
            </map>
            <map to='#f2b921'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#f37117'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#f43c63'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#f44067'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#f47615'>
              <bucket>&quot;Kosovo&quot;</bucket>
            </map>
            <map to='#f477ae'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#f5446c'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#f54870'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map>
            <map to='#f64c75'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#f67b14'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#f6b921'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#f75079'>
              <bucket>&quot;Eswatini&quot;</bucket>
            </map>
            <map to='#f7547e'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#f778ad'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#f85883'>
              <bucket>&quot;Eritrea&quot;</bucket>
            </map>
            <map to='#f88113'>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
            </map>
            <map to='#f88413'>
              <bucket>&quot;Laos&quot;</bucket>
            </map>
            <map to='#f88814'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#f88b15'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#f88f16'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map>
            <map to='#f89317'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#f89618'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#f89a19'>
              <bucket>&quot;Liechtenstein&quot;</bucket>
            </map>
            <map to='#f89d1a'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#f8a11b'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#f8a51c'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#f8a81c'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#f8ac1d'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#f8af1e'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#f8b31f'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#f8b720'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#f95d87'>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
            </map>
            <map to='#f9618c'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#fa6590'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#fa7aab'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#fb6995'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#fb6d99'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#fc719e'>
              <bucket>&quot;Dominica&quot;</bucket>
            </map>
            <map to='#fc7baa'>
              <bucket>&quot;Czechia&quot;</bucket>
            </map>
            <map to='#fd75a3'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#fd79a7'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='cov19_country_count_2.csv' id='cov19_country_count_2.csv_E5A17B5E6DAE407EB218A6C6CDA4F492'>
            <properties context=''>
              <relation connection='textscan.0upenzr0hd8r591e8cw710k1v3cp' name='cov19_country_count_2.csv' table='[cov19_country_count_2#csv]' type='table'>
                <columns character-set='UTF-8' header='no' locale='en_US' separator=','>
                  <column datatype='string' name='F1' ordinal='0' />
                  <column datatype='string' name='F2' ordinal='1' />
                  <column datatype='integer' name='F3' ordinal='2' />
                  <column datatype='integer' name='F4' ordinal='3' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='cov19_country_count' inline='true' name='federated.00wkklw1tfbk4w16c9h1s12blyis' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='cov19_country_count' name='textscan.1mzol1r0ax75zq12spgn10cv7elp'>
            <connection class='textscan' directory='/Users/lancy/Desktop/data' filename='cov19_country_count.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.1mzol1r0ax75zq12spgn10cv7elp' name='cov19_country_count.csv' table='[cov19_country_count#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='Country' ordinal='0' />
            <column datatype='integer' name='Confirmed' ordinal='1' />
            <column datatype='integer' name='Deaths' ordinal='2' />
            <column datatype='integer' name='Recovered' ordinal='3' />
            <column datatype='integer' name='Active' ordinal='4' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.1mzol1r0ax75zq12spgn10cv7elp' name='cov19_country_count.csv' table='[cov19_country_count#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='Country' ordinal='0' />
            <column datatype='integer' name='Confirmed' ordinal='1' />
            <column datatype='integer' name='Deaths' ordinal='2' />
            <column datatype='integer' name='Recovered' ordinal='3' />
            <column datatype='integer' name='Active' ordinal='4' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[cov19_country_count.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Country]</local-name>
            <parent-name>[cov19_country_count.csv]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cov19_country_count.csv_7E65DA9B31DA4F3DA332488F7F4A4844]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Confirmed</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Confirmed]</local-name>
            <parent-name>[cov19_country_count.csv]</parent-name>
            <remote-alias>Confirmed</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cov19_country_count.csv_7E65DA9B31DA4F3DA332488F7F4A4844]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Deaths</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Deaths]</local-name>
            <parent-name>[cov19_country_count.csv]</parent-name>
            <remote-alias>Deaths</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cov19_country_count.csv_7E65DA9B31DA4F3DA332488F7F4A4844]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Recovered</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Recovered]</local-name>
            <parent-name>[cov19_country_count.csv]</parent-name>
            <remote-alias>Recovered</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cov19_country_count.csv_7E65DA9B31DA4F3DA332488F7F4A4844]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Active</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Active]</local-name>
            <parent-name>[cov19_country_count.csv]</parent-name>
            <remote-alias>Active</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cov19_country_count.csv_7E65DA9B31DA4F3DA332488F7F4A4844]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Mortality rate' datatype='real' name='[Calculation_4102427483369193472]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Deaths]/[Confirmed]' />
      </column>
      <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <_.fcp.ObjectModelTableType.true...column caption='cov19_country_count.csv' datatype='table' name='[__tableau_internal_object_id__].[cov19_country_count.csv_7E65DA9B31DA4F3DA332488F7F4A4844]' role='measure' type='quantitative' />
      <extract _.fcp.ObjectModelExtractV2.true...object-id='' count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' authentication='auth-none' author-locale='en_US' class='hyper' dbname='/Users/lancy/Documents/My Tableau Repository/Datasources/cov19_country_count.hyper' default-settings='yes' schema='Extract' sslmode='' tablename='Extract' update-time='06/29/2020 03:34:27 AM' username='tableau_internal_user'>
          <_.fcp.ObjectModelEncapsulateLegacy.false...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <_.fcp.ObjectModelEncapsulateLegacy.true...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <refresh>
            <refresh-event add-from-file-path='cov19_country_count' increment-value='%null%' refresh-type='create' rows-inserted='187' timestamp-start='2020-06-29 03:34:27.456' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Country</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Country]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Country</remote-alias>
              <ordinal>0</ordinal>
              <family>cov19_country_count.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>187</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Confirmed</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Confirmed]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Confirmed</remote-alias>
              <ordinal>1</ordinal>
              <family>cov19_country_count.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>180</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Deaths</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Deaths]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Deaths</remote-alias>
              <ordinal>2</ordinal>
              <family>cov19_country_count.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>125</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Recovered</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Recovered]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Recovered</remote-alias>
              <ordinal>3</ordinal>
              <family>cov19_country_count.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>173</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Active</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Active]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Active</remote-alias>
              <ordinal>4</ordinal>
              <family>cov19_country_count.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>164</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='cov19_country_count.csv' id='cov19_country_count.csv_7E65DA9B31DA4F3DA332488F7F4A4844'>
            <properties context=''>
              <relation connection='textscan.1mzol1r0ax75zq12spgn10cv7elp' name='cov19_country_count.csv' table='[cov19_country_count#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='string' name='Country' ordinal='0' />
                  <column datatype='integer' name='Confirmed' ordinal='1' />
                  <column datatype='integer' name='Deaths' ordinal='2' />
                  <column datatype='integer' name='Recovered' ordinal='3' />
                  <column datatype='integer' name='Active' ordinal='4' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='sars_country_count' inline='true' name='federated.1ukkj5517ipw851d8k09o05hcg93' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='sars_country_count' name='textscan.1d83qr90l6fie91b3m0zk1p5pwbu'>
            <connection class='textscan' cleaning='yes' compat='no' csvFile='/Users/lancy/Desktop/data/sars_country_count.csv' dataRefreshTime='' directory='/Users/lancy/Desktop/data' filename='/var/folders/ms/kv6gv_rx7q172d9v9r5v21v40000gn/T/tableau-temp/0ybp6961ueqzam1cytw4r1h1axox/sars_country_count.csv.xlsx' interpretationMode='8' password='' server='' validate='no' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.1d83qr90l6fie91b3m0zk1p5pwbu' name='cov19_country_count.csv' table='[/Users/lancy/Desktop/data/cov19_country_count#csv]' type='table'>
          <columns character-set='UTF-8' gridOrigin='A1:E189:no:A1:E189:2' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='Country' ordinal='0' />
            <column datatype='integer' name='Confirmed' ordinal='1' />
            <column datatype='integer' name='Deaths' ordinal='2' />
            <column datatype='integer' name='Recovered' ordinal='3' />
            <column datatype='integer' name='Active' ordinal='4' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation type='collection'>
          <relation connection='textscan.1d83qr90l6fie91b3m0zk1p5pwbu' name='sars_country_count.csv' table='[/Users/lancy/Desktop/data/sars_country_count#csv]' type='table'>
            <columns character-set='UTF-8' gridOrigin='A1:D32:no:A1:D32:1' header='yes' locale='en_US' separator=','>
              <column datatype='string' name='Country' ordinal='0' />
              <column datatype='integer' name='Confirmed' ordinal='1' />
              <column datatype='integer' name='Deaths' ordinal='2' />
              <column datatype='integer' name='Recovered' ordinal='3' />
            </columns>
          </relation>
          <relation connection='textscan.1d83qr90l6fie91b3m0zk1p5pwbu' name='cov19_country_count.csv' table='[/Users/lancy/Desktop/data/cov19_country_count#csv]' type='table'>
            <columns character-set='UTF-8' gridOrigin='A1:E189:no:A1:E189:2' header='yes' locale='en_US' separator=','>
              <column datatype='string' name='Country' ordinal='0' />
              <column datatype='integer' name='Confirmed' ordinal='1' />
              <column datatype='integer' name='Deaths' ordinal='2' />
              <column datatype='integer' name='Recovered' ordinal='3' />
              <column datatype='integer' name='Active' ordinal='4' />
            </columns>
          </relation>
          <relation connection='textscan.1d83qr90l6fie91b3m0zk1p5pwbu' name='cov19_date_country_count.csv' table='[cov19_date_country_count#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='date' name='Date' ordinal='0' />
              <column datatype='string' name='Country' ordinal='1' />
              <column datatype='integer' name='Confirmed' ordinal='2' />
              <column datatype='integer' name='Deaths' ordinal='3' />
              <column datatype='integer' name='Recovered' ordinal='4' />
            </columns>
          </relation>
          <relation connection='textscan.1d83qr90l6fie91b3m0zk1p5pwbu' name='sars_date_country_count.csv' table='[/Users/lancy/Desktop/data/sars_date_country_count#csv]' type='table'>
            <columns character-set='UTF-8' gridOrigin='A1:E2539:no:A1:E2539:2' header='yes' locale='en_US' separator=','>
              <column datatype='date' name='Date' ordinal='0' />
              <column datatype='string' name='Country' ordinal='1' />
              <column datatype='integer' name='Confirmed' ordinal='2' />
              <column datatype='integer' name='Deaths' ordinal='3' />
              <column datatype='integer' name='Recovered' ordinal='4' />
            </columns>
          </relation>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <cols>
          <map key='[Active]' value='[cov19_country_count.csv].[Active]' />
          <map key='[Confirmed (cov19_country_count.csv)]' value='[cov19_country_count.csv].[Confirmed]' />
          <map key='[Confirmed (cov19_date_country_count.csv)]' value='[cov19_date_country_count.csv].[Confirmed]' />
          <map key='[Confirmed (sars_date_country_count.csv)]' value='[sars_date_country_count.csv].[Confirmed]' />
          <map key='[Confirmed]' value='[sars_country_count.csv].[Confirmed]' />
          <map key='[Country (cov19_country_count.csv)]' value='[cov19_country_count.csv].[Country]' />
          <map key='[Country (cov19_date_country_count.csv)]' value='[cov19_date_country_count.csv].[Country]' />
          <map key='[Country (sars_date_country_count.csv)]' value='[sars_date_country_count.csv].[Country]' />
          <map key='[Country]' value='[sars_country_count.csv].[Country]' />
          <map key='[Date (cov19_date_country_count.csv)]' value='[cov19_date_country_count.csv].[Date]' />
          <map key='[Date]' value='[sars_date_country_count.csv].[Date]' />
          <map key='[Deaths (cov19_country_count.csv)]' value='[cov19_country_count.csv].[Deaths]' />
          <map key='[Deaths (cov19_date_country_count.csv)]' value='[cov19_date_country_count.csv].[Deaths]' />
          <map key='[Deaths (sars_date_country_count.csv)]' value='[sars_date_country_count.csv].[Deaths]' />
          <map key='[Deaths]' value='[sars_country_count.csv].[Deaths]' />
          <map key='[Recovered (cov19_country_count.csv)]' value='[cov19_country_count.csv].[Recovered]' />
          <map key='[Recovered (cov19_date_country_count.csv)]' value='[cov19_date_country_count.csv].[Recovered]' />
          <map key='[Recovered (sars_date_country_count.csv)]' value='[sars_date_country_count.csv].[Recovered]' />
          <map key='[Recovered]' value='[sars_country_count.csv].[Recovered]' />
        </cols>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[sars_country_count.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:D32:no:A1:D32:1&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[cov19_country_count.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:E189:no:A1:E189:2&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[cov19_date_country_count.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[sars_date_country_count.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:E2539:no:A1:E2539:2&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Country]</local-name>
            <parent-name>[sars_country_count.csv]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[sars_country_count.csv_CBDA2C9137DD4BB29E1A03E729199116]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Confirmed</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Confirmed]</local-name>
            <parent-name>[sars_country_count.csv]</parent-name>
            <remote-alias>Confirmed</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[sars_country_count.csv_CBDA2C9137DD4BB29E1A03E729199116]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Deaths</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Deaths]</local-name>
            <parent-name>[sars_country_count.csv]</parent-name>
            <remote-alias>Deaths</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[sars_country_count.csv_CBDA2C9137DD4BB29E1A03E729199116]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Recovered</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Recovered]</local-name>
            <parent-name>[sars_country_count.csv]</parent-name>
            <remote-alias>Recovered</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[sars_country_count.csv_CBDA2C9137DD4BB29E1A03E729199116]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Country (cov19_country_count.csv)]</local-name>
            <parent-name>[cov19_country_count.csv]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cov19_country_count.csv_CAC40EF10F74414CBD1479223339D706]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Confirmed</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Confirmed (cov19_country_count.csv)]</local-name>
            <parent-name>[cov19_country_count.csv]</parent-name>
            <remote-alias>Confirmed</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cov19_country_count.csv_CAC40EF10F74414CBD1479223339D706]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Deaths</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Deaths (cov19_country_count.csv)]</local-name>
            <parent-name>[cov19_country_count.csv]</parent-name>
            <remote-alias>Deaths</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cov19_country_count.csv_CAC40EF10F74414CBD1479223339D706]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Recovered</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Recovered (cov19_country_count.csv)]</local-name>
            <parent-name>[cov19_country_count.csv]</parent-name>
            <remote-alias>Recovered</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cov19_country_count.csv_CAC40EF10F74414CBD1479223339D706]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Active</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Active]</local-name>
            <parent-name>[cov19_country_count.csv]</parent-name>
            <remote-alias>Active</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cov19_country_count.csv_CAC40EF10F74414CBD1479223339D706]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[Date (cov19_date_country_count.csv)]</local-name>
            <parent-name>[cov19_date_country_count.csv]</parent-name>
            <remote-alias>Date</remote-alias>
            <ordinal>9</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cov19_date_country_count.csv_9A3E6E7D47654D8F96EF9401F648D71B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Country (cov19_date_country_count.csv)]</local-name>
            <parent-name>[cov19_date_country_count.csv]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cov19_date_country_count.csv_9A3E6E7D47654D8F96EF9401F648D71B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Confirmed</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Confirmed (cov19_date_country_count.csv)]</local-name>
            <parent-name>[cov19_date_country_count.csv]</parent-name>
            <remote-alias>Confirmed</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cov19_date_country_count.csv_9A3E6E7D47654D8F96EF9401F648D71B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Deaths</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Deaths (cov19_date_country_count.csv)]</local-name>
            <parent-name>[cov19_date_country_count.csv]</parent-name>
            <remote-alias>Deaths</remote-alias>
            <ordinal>12</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cov19_date_country_count.csv_9A3E6E7D47654D8F96EF9401F648D71B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Recovered</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Recovered (cov19_date_country_count.csv)]</local-name>
            <parent-name>[cov19_date_country_count.csv]</parent-name>
            <remote-alias>Recovered</remote-alias>
            <ordinal>13</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cov19_date_country_count.csv_9A3E6E7D47654D8F96EF9401F648D71B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[Date]</local-name>
            <parent-name>[sars_date_country_count.csv]</parent-name>
            <remote-alias>Date</remote-alias>
            <ordinal>14</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[sars_date_country_count.csv_C8312FD7EBEB4EBCAE1277789990BB63]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Country (sars_date_country_count.csv)]</local-name>
            <parent-name>[sars_date_country_count.csv]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[sars_date_country_count.csv_C8312FD7EBEB4EBCAE1277789990BB63]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Confirmed</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Confirmed (sars_date_country_count.csv)]</local-name>
            <parent-name>[sars_date_country_count.csv]</parent-name>
            <remote-alias>Confirmed</remote-alias>
            <ordinal>16</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[sars_date_country_count.csv_C8312FD7EBEB4EBCAE1277789990BB63]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Deaths</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Deaths (sars_date_country_count.csv)]</local-name>
            <parent-name>[sars_date_country_count.csv]</parent-name>
            <remote-alias>Deaths</remote-alias>
            <ordinal>17</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[sars_date_country_count.csv_C8312FD7EBEB4EBCAE1277789990BB63]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Recovered</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Recovered (sars_date_country_count.csv)]</local-name>
            <parent-name>[sars_date_country_count.csv]</parent-name>
            <remote-alias>Recovered</remote-alias>
            <ordinal>18</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[sars_date_country_count.csv_C8312FD7EBEB4EBCAE1277789990BB63]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Death Rate' datatype='real' name='[Calculation_3520055756230832128]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Deaths]/[Confirmed]' />
      </column>
      <column caption='Recovered Rate' datatype='real' name='[Calculation_3520055756232335363]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Recovered]/[Confirmed]' />
      </column>
      <column caption='covid19_death_rate' datatype='real' name='[Calculation_3520055756235100164]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Deaths (cov19_country_count.csv)]/[Confirmed (cov19_country_count.csv)]' />
      </column>
      <column caption='covid19_recovered_rate' datatype='real' name='[Calculation_3520055756235309061]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Recovered (cov19_country_count.csv)]/[Confirmed (cov19_country_count.csv)]' />
      </column>
      <column caption='mortality rate' datatype='real' name='[Calculation_3520055756243853321]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Deaths (sars_date_country_count.csv)]/[Confirmed (sars_date_country_count.csv)]' />
      </column>
      <column caption='Confirmed (cov19 date country count.csv)' datatype='integer' name='[Confirmed (cov19_date_country_count.csv)]' role='measure' type='quantitative' />
      <column caption='Confirmed (sars date country count.csv)' datatype='integer' name='[Confirmed (sars_date_country_count.csv)]' role='measure' type='quantitative' />
      <column caption='Country (cov19 country count.csv)' datatype='string' name='[Country (cov19_country_count.csv)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Country (cov19 date country count.csv)' datatype='string' name='[Country (cov19_date_country_count.csv)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='string' name='[Country (sars_date_country_count.csv)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Date (cov19 date country count.csv)' datatype='date' name='[Date (cov19_date_country_count.csv)]' role='dimension' type='ordinal' />
      <column caption='Deaths (cov19 date country count.csv)' datatype='integer' name='[Deaths (cov19_date_country_count.csv)]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Deaths (sars_date_country_count.csv)]' role='measure' type='quantitative' />
      <column caption='Recovered (cov19 date country count.csv)' datatype='integer' name='[Recovered (cov19_date_country_count.csv)]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='cov19_country_count.csv' datatype='table' name='[__tableau_internal_object_id__].[cov19_country_count.csv_CAC40EF10F74414CBD1479223339D706]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='cov19_date_country_count.csv' datatype='table' name='[__tableau_internal_object_id__].[cov19_date_country_count.csv_9A3E6E7D47654D8F96EF9401F648D71B]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='sars_country_count.csv' datatype='table' name='[__tableau_internal_object_id__].[sars_country_count.csv_CBDA2C9137DD4BB29E1A03E729199116]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='sars_date_country_count.csv' datatype='table' name='[__tableau_internal_object_id__].[sars_date_country_count.csv_C8312FD7EBEB4EBCAE1277789990BB63]' role='measure' type='quantitative' />
      <column-instance column='[Country (cov19_country_count.csv)]' derivation='None' name='[none:Country (cov19_country_count.csv):nk]' pivot='key' type='nominal' />
      <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
      <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
      <column-instance column='[Confirmed (sars_date_country_count.csv)]' derivation='Sum' name='[sum:Confirmed (sars_date_country_count.csv):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Deaths (sars_date_country_count.csv)]' derivation='Sum' name='[sum:Deaths (sars_date_country_count.csv):qk]' pivot='key' type='quantitative' />
      <extract _.fcp.ObjectModelExtractV2.true...object-id='' count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' authentication='auth-none' author-locale='en_US' class='hyper' dbname='/Users/lancy/Documents/My Tableau Repository/Datasources/sars_country_count.hyper' default-settings='yes' schema='Extract' sslmode='' tablename='Extract' update-time='06/27/2020 08:40:15 PM' username='tableau_internal_user'>
          <_.fcp.ObjectModelEncapsulateLegacy.false...relation name='cov19_country_count.csv_CAC40EF10F74414CBD1479223339D706' table='[Extract].[cov19_country_count.csv_CAC40EF10F74414CBD1479223339D706]' type='table' />
          <_.fcp.ObjectModelEncapsulateLegacy.true...relation type='collection'>
            <relation name='sars_country_count.csv_CBDA2C9137DD4BB29E1A03E729199116' table='[Extract].[sars_country_count.csv_CBDA2C9137DD4BB29E1A03E729199116]' type='table' />
            <relation name='cov19_country_count.csv_CAC40EF10F74414CBD1479223339D706' table='[Extract].[cov19_country_count.csv_CAC40EF10F74414CBD1479223339D706]' type='table' />
            <relation name='cov19_date_country_count.csv_9A3E6E7D47654D8F96EF9401F648D71B' table='[Extract].[cov19_date_country_count.csv_9A3E6E7D47654D8F96EF9401F648D71B]' type='table' />
            <relation name='sars_date_country_count.csv_C8312FD7EBEB4EBCAE1277789990BB63' table='[Extract].[sars_date_country_count.csv_C8312FD7EBEB4EBCAE1277789990BB63]' type='table' />
          </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
          <cols>
            <map key='[Active]' value='[cov19_country_count.csv_CAC40EF10F74414CBD1479223339D706].[Active]' />
            <map key='[Confirmed (cov19_country_count.csv)]' value='[cov19_country_count.csv_CAC40EF10F74414CBD1479223339D706].[Confirmed]' />
            <map key='[Confirmed (cov19_date_country_count.csv)]' value='[cov19_date_country_count.csv_9A3E6E7D47654D8F96EF9401F648D71B].[Confirmed]' />
            <map key='[Confirmed (sars_date_country_count.csv)]' value='[sars_date_country_count.csv_C8312FD7EBEB4EBCAE1277789990BB63].[Confirmed]' />
            <map key='[Confirmed]' value='[sars_country_count.csv_CBDA2C9137DD4BB29E1A03E729199116].[Confirmed]' />
            <map key='[Country (cov19_country_count.csv)]' value='[cov19_country_count.csv_CAC40EF10F74414CBD1479223339D706].[Country]' />
            <map key='[Country (cov19_date_country_count.csv)]' value='[cov19_date_country_count.csv_9A3E6E7D47654D8F96EF9401F648D71B].[Country]' />
            <map key='[Country (sars_date_country_count.csv)]' value='[sars_date_country_count.csv_C8312FD7EBEB4EBCAE1277789990BB63].[Country]' />
            <map key='[Country]' value='[sars_country_count.csv_CBDA2C9137DD4BB29E1A03E729199116].[Country]' />
            <map key='[Date (cov19_date_country_count.csv)]' value='[cov19_date_country_count.csv_9A3E6E7D47654D8F96EF9401F648D71B].[Date]' />
            <map key='[Date]' value='[sars_date_country_count.csv_C8312FD7EBEB4EBCAE1277789990BB63].[Date]' />
            <map key='[Deaths (cov19_country_count.csv)]' value='[cov19_country_count.csv_CAC40EF10F74414CBD1479223339D706].[Deaths]' />
            <map key='[Deaths (cov19_date_country_count.csv)]' value='[cov19_date_country_count.csv_9A3E6E7D47654D8F96EF9401F648D71B].[Deaths]' />
            <map key='[Deaths (sars_date_country_count.csv)]' value='[sars_date_country_count.csv_C8312FD7EBEB4EBCAE1277789990BB63].[Deaths]' />
            <map key='[Deaths]' value='[sars_country_count.csv_CBDA2C9137DD4BB29E1A03E729199116].[Deaths]' />
            <map key='[Recovered (cov19_country_count.csv)]' value='[cov19_country_count.csv_CAC40EF10F74414CBD1479223339D706].[Recovered]' />
            <map key='[Recovered (cov19_date_country_count.csv)]' value='[cov19_date_country_count.csv_9A3E6E7D47654D8F96EF9401F648D71B].[Recovered]' />
            <map key='[Recovered (sars_date_country_count.csv)]' value='[sars_date_country_count.csv_C8312FD7EBEB4EBCAE1277789990BB63].[Recovered]' />
            <map key='[Recovered]' value='[sars_country_count.csv_CBDA2C9137DD4BB29E1A03E729199116].[Recovered]' />
          </cols>
          <refresh>
            <refresh-event add-from-file-path='sars_country_count' increment-value='%null%' refresh-type='create' rows-inserted='30244' timestamp-start='2020-06-27 20:40:15.786' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Country</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Country]</local-name>
              <parent-name>[sars_country_count.csv_CBDA2C9137DD4BB29E1A03E729199116]</parent-name>
              <remote-alias>Country</remote-alias>
              <ordinal>0</ordinal>
              <family>sars_country_count.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>31</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[sars_country_count.csv_CBDA2C9137DD4BB29E1A03E729199116]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Confirmed</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Confirmed]</local-name>
              <parent-name>[sars_country_count.csv_CBDA2C9137DD4BB29E1A03E729199116]</parent-name>
              <remote-alias>Confirmed</remote-alias>
              <ordinal>1</ordinal>
              <family>sars_country_count.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>16</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[sars_country_count.csv_CBDA2C9137DD4BB29E1A03E729199116]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Deaths</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Deaths]</local-name>
              <parent-name>[sars_country_count.csv_CBDA2C9137DD4BB29E1A03E729199116]</parent-name>
              <remote-alias>Deaths</remote-alias>
              <ordinal>2</ordinal>
              <family>sars_country_count.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>9</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[sars_country_count.csv_CBDA2C9137DD4BB29E1A03E729199116]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Recovered</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Recovered]</local-name>
              <parent-name>[sars_country_count.csv_CBDA2C9137DD4BB29E1A03E729199116]</parent-name>
              <remote-alias>Recovered</remote-alias>
              <ordinal>3</ordinal>
              <family>sars_country_count.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>16</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[sars_country_count.csv_CBDA2C9137DD4BB29E1A03E729199116]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Country</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Country (cov19_country_count.csv)]</local-name>
              <parent-name>[cov19_country_count.csv_CAC40EF10F74414CBD1479223339D706]</parent-name>
              <remote-alias>Country</remote-alias>
              <ordinal>4</ordinal>
              <family>cov19_country_count.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>187</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cov19_country_count.csv_CAC40EF10F74414CBD1479223339D706]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Confirmed</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Confirmed (cov19_country_count.csv)]</local-name>
              <parent-name>[cov19_country_count.csv_CAC40EF10F74414CBD1479223339D706]</parent-name>
              <remote-alias>Confirmed</remote-alias>
              <ordinal>5</ordinal>
              <family>cov19_country_count.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>180</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cov19_country_count.csv_CAC40EF10F74414CBD1479223339D706]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Deaths</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Deaths (cov19_country_count.csv)]</local-name>
              <parent-name>[cov19_country_count.csv_CAC40EF10F74414CBD1479223339D706]</parent-name>
              <remote-alias>Deaths</remote-alias>
              <ordinal>6</ordinal>
              <family>cov19_country_count.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>125</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cov19_country_count.csv_CAC40EF10F74414CBD1479223339D706]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Recovered</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Recovered (cov19_country_count.csv)]</local-name>
              <parent-name>[cov19_country_count.csv_CAC40EF10F74414CBD1479223339D706]</parent-name>
              <remote-alias>Recovered</remote-alias>
              <ordinal>7</ordinal>
              <family>cov19_country_count.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>173</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cov19_country_count.csv_CAC40EF10F74414CBD1479223339D706]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Active</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Active]</local-name>
              <parent-name>[cov19_country_count.csv_CAC40EF10F74414CBD1479223339D706]</parent-name>
              <remote-alias>Active</remote-alias>
              <ordinal>8</ordinal>
              <family>cov19_country_count.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>164</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cov19_country_count.csv_CAC40EF10F74414CBD1479223339D706]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Date</remote-name>
              <remote-type>133</remote-type>
              <local-name>[Date (cov19_date_country_count.csv)]</local-name>
              <parent-name>[cov19_date_country_count.csv_9A3E6E7D47654D8F96EF9401F648D71B]</parent-name>
              <remote-alias>Date</remote-alias>
              <ordinal>9</ordinal>
              <family>cov19_date_country_count.csv</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>147</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cov19_date_country_count.csv_9A3E6E7D47654D8F96EF9401F648D71B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Country</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Country (cov19_date_country_count.csv)]</local-name>
              <parent-name>[cov19_date_country_count.csv_9A3E6E7D47654D8F96EF9401F648D71B]</parent-name>
              <remote-alias>Country</remote-alias>
              <ordinal>10</ordinal>
              <family>cov19_date_country_count.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>196</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cov19_date_country_count.csv_9A3E6E7D47654D8F96EF9401F648D71B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Confirmed</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Confirmed (cov19_date_country_count.csv)]</local-name>
              <parent-name>[cov19_date_country_count.csv_9A3E6E7D47654D8F96EF9401F648D71B]</parent-name>
              <remote-alias>Confirmed</remote-alias>
              <ordinal>11</ordinal>
              <family>cov19_date_country_count.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>3604</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cov19_date_country_count.csv_9A3E6E7D47654D8F96EF9401F648D71B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Deaths</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Deaths (cov19_date_country_count.csv)]</local-name>
              <parent-name>[cov19_date_country_count.csv_9A3E6E7D47654D8F96EF9401F648D71B]</parent-name>
              <remote-alias>Deaths</remote-alias>
              <ordinal>12</ordinal>
              <family>cov19_date_country_count.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1072</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cov19_date_country_count.csv_9A3E6E7D47654D8F96EF9401F648D71B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Recovered</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Recovered (cov19_date_country_count.csv)]</local-name>
              <parent-name>[cov19_date_country_count.csv_9A3E6E7D47654D8F96EF9401F648D71B]</parent-name>
              <remote-alias>Recovered</remote-alias>
              <ordinal>13</ordinal>
              <family>cov19_date_country_count.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2123</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cov19_date_country_count.csv_9A3E6E7D47654D8F96EF9401F648D71B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Date</remote-name>
              <remote-type>133</remote-type>
              <local-name>[Date]</local-name>
              <parent-name>[sars_date_country_count.csv_C8312FD7EBEB4EBCAE1277789990BB63]</parent-name>
              <remote-alias>Date</remote-alias>
              <ordinal>14</ordinal>
              <family>sars_date_country_count.csv</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>96</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[sars_date_country_count.csv_C8312FD7EBEB4EBCAE1277789990BB63]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Country</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Country (sars_date_country_count.csv)]</local-name>
              <parent-name>[sars_date_country_count.csv_C8312FD7EBEB4EBCAE1277789990BB63]</parent-name>
              <remote-alias>Country</remote-alias>
              <ordinal>15</ordinal>
              <family>sars_date_country_count.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>36</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[sars_date_country_count.csv_C8312FD7EBEB4EBCAE1277789990BB63]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Confirmed</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Confirmed (sars_date_country_count.csv)]</local-name>
              <parent-name>[sars_date_country_count.csv_C8312FD7EBEB4EBCAE1277789990BB63]</parent-name>
              <remote-alias>Confirmed</remote-alias>
              <ordinal>16</ordinal>
              <family>sars_date_country_count.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>220</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[sars_date_country_count.csv_C8312FD7EBEB4EBCAE1277789990BB63]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Deaths</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Deaths (sars_date_country_count.csv)]</local-name>
              <parent-name>[sars_date_country_count.csv_C8312FD7EBEB4EBCAE1277789990BB63]</parent-name>
              <remote-alias>Deaths</remote-alias>
              <ordinal>17</ordinal>
              <family>sars_date_country_count.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>103</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[sars_date_country_count.csv_C8312FD7EBEB4EBCAE1277789990BB63]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Recovered</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Recovered (sars_date_country_count.csv)]</local-name>
              <parent-name>[sars_date_country_count.csv_C8312FD7EBEB4EBCAE1277789990BB63]</parent-name>
              <remote-alias>Recovered</remote-alias>
              <ordinal>18</ordinal>
              <family>sars_date_country_count.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>186</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[sars_date_country_count.csv_C8312FD7EBEB4EBCAE1277789990BB63]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1ukkj5517ipw851d8k09o05hcg93].[sum:Confirmed (sars_date_country_count.csv):qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1ukkj5517ipw851d8k09o05hcg93].[sum:Deaths (sars_date_country_count.csv):qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Country:nk]' palette='cyclic_10_0' type='palette'>
            <map to='#1ba3c6'>
              <bucket>%null%</bucket>
            </map>
            <map to='#1ba3c6'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#1fae81'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#26afc2'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#28b599'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#2ea865'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#31bbbe'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#32bdb1'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#3da249'>
              <bucket>&quot;Hong Kong SAR, China&quot;</bucket>
            </map>
            <map to='#4f7cba'>
              <bucket>&quot;Viet Nam&quot;</bucket>
            </map>
            <map to='#5ca536'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#6976be'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
            <map to='#8371c2'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#8cb12c'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#9e6dc2'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#ba6bc0'>
              <bucket>&quot;Taiwan, China&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#d4bb21'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#d669be'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#e33233'>
              <bucket>&quot;Republic of Korea&quot;</bucket>
            </map>
            <map to='#e44023'>
              <bucket>&quot;Republic of Ireland&quot;</bucket>
            </map>
            <map to='#e670b6'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#eb374b'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#ecb921'>
              <bucket>&quot;Macao SAR, China&quot;</bucket>
            </map>
            <map to='#ee601b'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#f43c63'>
              <bucket>&quot;Russian Federation&quot;</bucket>
            </map>
            <map to='#f678ae'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#f8557f'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#f88113'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#f89718'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#f8ad1e'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#fc6f9b'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Country (cov19_country_count.csv):nk]' palette='tableau-10-medium' type='palette'>
            <map to='#1ba3c6'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#1ca4c5'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#1ea6c4'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#1fae81'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#20a8c4'>
              <bucket>&quot;Andorra&quot;</bucket>
            </map>
            <map to='#20af84'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#21ad7c'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#22aac3'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#22b088'>
              <bucket>&quot;Cabo Verde&quot;</bucket>
            </map>
            <map to='#23ac77'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='#23b18c'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#24acc3'>
              <bucket>&quot;Antigua and Barbuda&quot;</bucket>
            </map>
            <map to='#25aec2'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#25b290'>
              <bucket>&quot;Burma&quot;</bucket>
            </map>
            <map to='#26ab73'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#26b494'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#27b0c1'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#28aa6e'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#28b598'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#29b2c1'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#29b69c'>
              <bucket>&quot;Brunei&quot;</bucket>
            </map>
            <map to='#2ba96a'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#2bb4c0'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#2bb79f'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#2cb9a3'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#2da865'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#2db6c0'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#2eb8bf'>
              <bucket>&quot;Bahamas&quot;</bucket>
            </map>
            <map to='#2ebaa7'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#30a761'>
              <bucket>&quot;Comoros&quot;</bucket>
            </map>
            <map to='#30babf'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#30bbab'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#31bcaf'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#32a65c'>
              <bucket>&quot;Congo (Brazzaville)&quot;</bucket>
            </map>
            <map to='#32bcbe'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#33bdb3'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#34bebd'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#34bfb7'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#35a558'>
              <bucket>&quot;Congo (Kinshasa)&quot;</bucket>
            </map>
            <map to='#36c0bb'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#36c0bd'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#37a453'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#39a34f'>
              <bucket>&quot;Cote d&apos;Ivoire&quot;</bucket>
            </map>
            <map to='#3ca24a'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#3ea146'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#41a041'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#439f3d'>
              <bucket>&quot;Czechia&quot;</bucket>
            </map>
            <map to='#489f3a'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#4f7cba'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#50a138'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#537bba'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#577abb'>
              <bucket>&quot;Yemen&quot;</bucket>
            </map>
            <map to='#58a336'>
              <bucket>&quot;Dominica&quot;</bucket>
            </map>
            <map to='#5f78bc'>
              <bucket>&quot;West Bank and Gaza&quot;</bucket>
            </map>
            <map to='#5fa535'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#6377bd'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#67a733'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#67bf5c'>
              <bucket>&quot;Sao Tome and Principe&quot;</bucket>
            </map>
            <map to='#6876bd'>
              <bucket>&quot;Venezuela&quot;</bucket>
            </map>
            <map to='#6c76be'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
            <map to='#6fa932'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#7075bf'>
              <bucket>&quot;US&quot;</bucket>
            </map>
            <map to='#729ece'>
              <bucket>%null%</bucket>
            </map>
            <map to='#7474bf'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#76ab30'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#7873c0'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#7d72c1'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#7ead2e'>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
            </map>
            <map to='#8171c1'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#8571c2'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#86af2d'>
              <bucket>&quot;Eritrea&quot;</bucket>
            </map>
            <map to='#8970c3'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#8d6fc3'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#8db12b'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#926ec3'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#95b32a'>
              <bucket>&quot;Eswatini&quot;</bucket>
            </map>
            <map to='#966ec3'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#9b6ec3'>
              <bucket>&quot;Timor-Leste&quot;</bucket>
            </map>
            <map to='#9db528'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#9f6dc2'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#a46dc2'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
            <map to='#a4b726'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map>
            <map to='#a86cc1'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map>
            <map to='#acb925'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#ad6cc1'>
              <bucket>&quot;Taiwan*&quot;</bucket>
            </map>
            <map to='#b16cc1'>
              <bucket>&quot;Syria&quot;</bucket>
            </map>
            <map to='#b4bb23'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#b66bc0'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#ba6bc0'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#bf6abf'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#bfbc21'>
              <bucket>&quot;Gambia&quot;</bucket>
            </map>
            <map to='#c36abf'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#c3bc21'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#c7bc21'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#c86abf'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#cbbb21'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#cc69be'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#cfbb21'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#d169be'>
              <bucket>&quot;South Sudan&quot;</bucket>
            </map>
            <map to='#d3bb21'>
              <bucket>&quot;Greenland&quot;</bucket>
            </map>
            <map to='#d669be'>
              <bucket>&quot;South Korea&quot;</bucket>
            </map>
            <map to='#d7bb21'>
              <bucket>&quot;Grenada&quot;</bucket>
            </map>
            <map to='#d86abc'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#daba21'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#db6bbb'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#dd6cba'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#deba21'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#df3029'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#df3227'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#e06db8'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#e1312d'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#e13725'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#e23131'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#e26fb7'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#e2ba21'>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
            </map>
            <map to='#e33235'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map>
            <map to='#e33d24'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#e44223'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#e53339'>
              <bucket>&quot;Monaco&quot;</bucket>
            </map>
            <map to='#e570b6'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#e6343c'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#e64721'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#e6ba21'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='#e73540'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#e74c20'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#e871b4'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map>
            <map to='#e93544'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#e9511f'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#ea3648'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#ea72b3'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#eab921'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#eb374c'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#eb571d'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#ec5c1c'>
              <bucket>&quot;Liechtenstein&quot;</bucket>
            </map>
            <map to='#ed384f'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#ed665d'>
              <bucket>&quot;Western Sahara&quot;</bucket>
            </map>
            <map to='#ed74b2'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#ee3853'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#ee611b'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#eeb921'>
              <bucket>&quot;Holy See&quot;</bucket>
            </map>
            <map to='#ef3957'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#ef6619'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#ef75b1'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#f13a5b'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#f23b5f'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#f2b921'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#f37117'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#f43c63'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#f44067'>
              <bucket>&quot;North Macedonia&quot;</bucket>
            </map>
            <map to='#f47615'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#f477ae'>
              <bucket>&quot;San Marino&quot;</bucket>
            </map>
            <map to='#f5446c'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#f54870'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#f64c75'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#f67b14'>
              <bucket>&quot;Laos&quot;</bucket>
            </map>
            <map to='#f6b921'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#f75079'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#f7547e'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map>
            <map to='#f778ad'>
              <bucket>&quot;Saint Vincent and the Grenadines&quot;</bucket>
            </map>
            <map to='#f85883'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#f88113'>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
            </map>
            <map to='#f88413'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#f88814'>
              <bucket>&quot;Kosovo&quot;</bucket>
            </map>
            <map to='#f88b15'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#f88f16'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#f89317'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#f89618'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#f89a19'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#f89d1a'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#f8a11b'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#f8a51c'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#f8a81c'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#f8ac1d'>
              <bucket>&quot;Iran&quot;</bucket>
            </map>
            <map to='#f8af1e'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#f8b31f'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#f8b720'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#f95d87'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#f9618c'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#fa6590'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#fa7aab'>
              <bucket>&quot;Saint Lucia&quot;</bucket>
            </map>
            <map to='#fb6995'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#fb6d99'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#fc719e'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#fc7baa'>
              <bucket>&quot;Saint Kitts and Nevis&quot;</bucket>
            </map>
            <map to='#fd75a3'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='#fd79a7'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#ff9e4a'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <default-sorts>
        <manual-sort column='[none:Forecast Indicator:nk]' direction='ASC'>
          <dictionary>
            <bucket>&quot;Actual&quot;</bucket>
            <bucket>&quot;Estimate&quot;</bucket>
          </dictionary>
        </manual-sort>
      </default-sorts>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='cov19_country_count.csv' id='cov19_country_count.csv_CAC40EF10F74414CBD1479223339D706'>
            <properties context=''>
              <relation connection='textscan.1d83qr90l6fie91b3m0zk1p5pwbu' name='cov19_country_count.csv' table='[/Users/lancy/Desktop/data/cov19_country_count#csv]' type='table'>
                <columns character-set='UTF-8' gridOrigin='A1:E189:no:A1:E189:2' header='yes' locale='en_US' separator=','>
                  <column datatype='string' name='Country' ordinal='0' />
                  <column datatype='integer' name='Confirmed' ordinal='1' />
                  <column datatype='integer' name='Deaths' ordinal='2' />
                  <column datatype='integer' name='Recovered' ordinal='3' />
                  <column datatype='integer' name='Active' ordinal='4' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='cov19_country_count.csv_CAC40EF10F74414CBD1479223339D706' table='[Extract].[cov19_country_count.csv_CAC40EF10F74414CBD1479223339D706]' type='table' />
            </properties>
          </object>
          <object caption='cov19_date_country_count.csv' id='cov19_date_country_count.csv_9A3E6E7D47654D8F96EF9401F648D71B'>
            <properties context=''>
              <relation connection='textscan.1d83qr90l6fie91b3m0zk1p5pwbu' name='cov19_date_country_count.csv' table='[cov19_date_country_count#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='date' name='Date' ordinal='0' />
                  <column datatype='string' name='Country' ordinal='1' />
                  <column datatype='integer' name='Confirmed' ordinal='2' />
                  <column datatype='integer' name='Deaths' ordinal='3' />
                  <column datatype='integer' name='Recovered' ordinal='4' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='cov19_date_country_count.csv_9A3E6E7D47654D8F96EF9401F648D71B' table='[Extract].[cov19_date_country_count.csv_9A3E6E7D47654D8F96EF9401F648D71B]' type='table' />
            </properties>
          </object>
          <object caption='sars_country_count.csv' id='sars_country_count.csv_CBDA2C9137DD4BB29E1A03E729199116'>
            <properties context=''>
              <relation connection='textscan.1d83qr90l6fie91b3m0zk1p5pwbu' name='sars_country_count.csv' table='[/Users/lancy/Desktop/data/sars_country_count#csv]' type='table'>
                <columns character-set='UTF-8' gridOrigin='A1:D32:no:A1:D32:1' header='yes' locale='en_US' separator=','>
                  <column datatype='string' name='Country' ordinal='0' />
                  <column datatype='integer' name='Confirmed' ordinal='1' />
                  <column datatype='integer' name='Deaths' ordinal='2' />
                  <column datatype='integer' name='Recovered' ordinal='3' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='sars_country_count.csv_CBDA2C9137DD4BB29E1A03E729199116' table='[Extract].[sars_country_count.csv_CBDA2C9137DD4BB29E1A03E729199116]' type='table' />
            </properties>
          </object>
          <object caption='sars_date_country_count.csv' id='sars_date_country_count.csv_C8312FD7EBEB4EBCAE1277789990BB63'>
            <properties context=''>
              <relation connection='textscan.1d83qr90l6fie91b3m0zk1p5pwbu' name='sars_date_country_count.csv' table='[/Users/lancy/Desktop/data/sars_date_country_count#csv]' type='table'>
                <columns character-set='UTF-8' gridOrigin='A1:E2539:no:A1:E2539:2' header='yes' locale='en_US' separator=','>
                  <column datatype='date' name='Date' ordinal='0' />
                  <column datatype='string' name='Country' ordinal='1' />
                  <column datatype='integer' name='Confirmed' ordinal='2' />
                  <column datatype='integer' name='Deaths' ordinal='3' />
                  <column datatype='integer' name='Recovered' ordinal='4' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='sars_date_country_count.csv_C8312FD7EBEB4EBCAE1277789990BB63' table='[Extract].[sars_date_country_count.csv_C8312FD7EBEB4EBCAE1277789990BB63]' type='table' />
            </properties>
          </object>
        </objects>
        <relationships>
          <relationship>
            <expression op='='>
              <expression op='[Confirmed]' />
              <expression op='[Confirmed (cov19_country_count.csv)]' />
            </expression>
            <first-end-point object-id='sars_country_count.csv_CBDA2C9137DD4BB29E1A03E729199116' />
            <second-end-point object-id='cov19_country_count.csv_CAC40EF10F74414CBD1479223339D706' />
          </relationship>
          <relationship>
            <expression op='='>
              <expression op='[Confirmed]' />
              <expression op='[Confirmed (cov19_date_country_count.csv)]' />
            </expression>
            <first-end-point object-id='sars_country_count.csv_CBDA2C9137DD4BB29E1A03E729199116' />
            <second-end-point object-id='cov19_date_country_count.csv_9A3E6E7D47654D8F96EF9401F648D71B' />
          </relationship>
          <relationship>
            <expression op='='>
              <expression op='[Confirmed]' />
              <expression op='[Confirmed (sars_date_country_count.csv)]' />
            </expression>
            <first-end-point object-id='sars_country_count.csv_CBDA2C9137DD4BB29E1A03E729199116' />
            <second-end-point object-id='sars_date_country_count.csv_C8312FD7EBEB4EBCAE1277789990BB63' />
          </relationship>
        </relationships>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='cov19_country_count_2 (2)' inline='true' name='federated.0axu3yq0bos93d101yqpk0yd5z2i (copy)' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='cov19_country_count_2' name='textscan.0upenzr0hd8r591e8cw710k1v3cp (copy)'>
            <connection class='textscan' directory='/Users/lancy/Desktop/data' filename='cov19_country_count_2.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.0upenzr0hd8r591e8cw710k1v3cp (copy)' name='cov19_country_count_2.csv' table='[cov19_country_count_2#csv]' type='table'>
          <columns character-set='UTF-8' header='no' locale='en_US' separator=','>
            <column datatype='string' name='F1' ordinal='0' />
            <column datatype='string' name='F2' ordinal='1' />
            <column datatype='integer' name='F3' ordinal='2' />
            <column datatype='integer' name='F4' ordinal='3' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.0upenzr0hd8r591e8cw710k1v3cp (copy)' name='cov19_country_count_2.csv' table='[cov19_country_count_2#csv]' type='table'>
          <columns character-set='UTF-8' header='no' locale='en_US' separator=','>
            <column datatype='string' name='F1' ordinal='0' />
            <column datatype='string' name='F2' ordinal='1' />
            <column datatype='integer' name='F3' ordinal='2' />
            <column datatype='integer' name='F4' ordinal='3' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[cov19_country_count_2.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;false&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F1</remote-name>
            <remote-type>129</remote-type>
            <local-name>[F1]</local-name>
            <parent-name>[cov19_country_count_2.csv]</parent-name>
            <remote-alias>F1</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cov19_country_count_2.csv_E5A17B5E6DAE407EB218A6C6CDA4F492]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F2</remote-name>
            <remote-type>129</remote-type>
            <local-name>[F2]</local-name>
            <parent-name>[cov19_country_count_2.csv]</parent-name>
            <remote-alias>F2</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cov19_country_count_2.csv_E5A17B5E6DAE407EB218A6C6CDA4F492]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F3</remote-name>
            <remote-type>20</remote-type>
            <local-name>[F3]</local-name>
            <parent-name>[cov19_country_count_2.csv]</parent-name>
            <remote-alias>F3</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cov19_country_count_2.csv_E5A17B5E6DAE407EB218A6C6CDA4F492]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F4</remote-name>
            <remote-type>20</remote-type>
            <local-name>[F4]</local-name>
            <parent-name>[cov19_country_count_2.csv]</parent-name>
            <remote-alias>F4</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cov19_country_count_2.csv_E5A17B5E6DAE407EB218A6C6CDA4F492]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='t' datatype='real' name='[Calculation_4228246797991231488]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(index()-25)/4'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='logistic' datatype='real' name='[Calculation_4228246797991317505]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='1/(1+EXP(1)^-[Calculation_4228246797991231488])'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Size' datatype='real' name='[Calculation_4228246797991481346]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='RUNNING_AVG(SUM([F3]))'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Rank1' datatype='real' name='[Calculation_4228246797991591939]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='RUNNING_SUM(SUM([F3]))/TOTAL(SUM([F3]))'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Rank2' datatype='real' name='[Calculation_4228246797991653380]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='RUNNING_SUM(SUM([F3]))/TOTAL(SUM([F3]))'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='F(t)' datatype='real' name='[Calculation_4228246797991718917]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Calculation_4228246797991591939]+(([Calculation_4228246797991653380]-[Calculation_4228246797991591939])*[Calculation_4228246797991317505])'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Country' datatype='string' name='[F1]' role='dimension' type='nominal' />
      <column caption='Type' datatype='string' name='[F2]' role='dimension' type='nominal' />
      <column caption='Number' datatype='integer' name='[F3]' role='measure' type='quantitative' />
      <column aggregation='None' caption='rowtype (1)' datatype='integer' name='[F4 (bin) 1]' role='dimension' type='ordinal'>
        <calculation class='bin' decimals='0' formula='[F4]' peg='0' size='1' />
      </column>
      <column aggregation='None' caption='rowtype' datatype='integer' name='[F4 (bin)]' role='dimension' type='ordinal'>
        <calculation class='bin' decimals='0' formula='[F4]' peg='0' size='1' />
      </column>
      <column datatype='integer' name='[F4]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='cov19_country_count_2.csv' datatype='table' name='[__tableau_internal_object_id__].[cov19_country_count_2.csv_E5A17B5E6DAE407EB218A6C6CDA4F492]' role='measure' type='quantitative' />
      <column-instance column='[F1]' derivation='None' name='[none:F1:nk]' pivot='key' type='nominal' />
      <column-instance column='[F2]' derivation='None' name='[none:F2:nk]' pivot='key' type='nominal' />
      <group caption='Action (Country)' hidden='true' name='[Action (Country)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[F1]' />
        </groupfilter>
      </group>
      <group caption='Action (Country,Type,rowtype)' hidden='true' name='[Action (Country,Type,rowtype)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[F1]' />
          <groupfilter function='level-members' level='[F2]' />
          <groupfilter function='level-members' level='[F4 (bin)]' />
        </groupfilter>
      </group>
      <extract _.fcp.ObjectModelExtractV2.true...object-id='' count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' authentication='auth-none' author-locale='en_US' class='hyper' dbname='/Users/lancy/Documents/My Tableau Repository/Datasources/cov19_country_count_2 copy 1.hyper' default-settings='yes' schema='Extract' sslmode='' tablename='Extract' update-time='06/29/2020 04:59:45 AM' username='tableau_internal_user'>
          <_.fcp.ObjectModelEncapsulateLegacy.false...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <_.fcp.ObjectModelEncapsulateLegacy.true...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <refresh>
            <refresh-event add-from-file-path='cov19_country_count_2' increment-value='%null%' refresh-type='create' rows-inserted='1496' timestamp-start='2020-06-29 04:59:45.063' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>F1</remote-name>
              <remote-type>129</remote-type>
              <local-name>[F1]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>F1</remote-alias>
              <ordinal>0</ordinal>
              <family>cov19_country_count_2.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>187</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cov19_country_count_2.csv_E5A17B5E6DAE407EB218A6C6CDA4F492]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>F2</remote-name>
              <remote-type>129</remote-type>
              <local-name>[F2]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>F2</remote-alias>
              <ordinal>1</ordinal>
              <family>cov19_country_count_2.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>4</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cov19_country_count_2.csv_E5A17B5E6DAE407EB218A6C6CDA4F492]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>F3</remote-name>
              <remote-type>20</remote-type>
              <local-name>[F3]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>F3</remote-alias>
              <ordinal>2</ordinal>
              <family>cov19_country_count_2.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>569</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cov19_country_count_2.csv_E5A17B5E6DAE407EB218A6C6CDA4F492]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>F4</remote-name>
              <remote-type>20</remote-type>
              <local-name>[F4]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>F4</remote-alias>
              <ordinal>3</ordinal>
              <family>cov19_country_count_2.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cov19_country_count_2.csv_E5A17B5E6DAE407EB218A6C6CDA4F492]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:F2:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Active&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Recovered&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Deaths&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Confirmed&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:F1:nk]' palette='cyclic_10_0' type='palette'>
            <map to='#1ba3c6'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#1ca4c5'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#1ea6c4'>
              <bucket>&quot;Yemen&quot;</bucket>
            </map>
            <map to='#1fae81'>
              <bucket>&quot;South Korea&quot;</bucket>
            </map>
            <map to='#20a8c4'>
              <bucket>&quot;Western Sahara&quot;</bucket>
            </map>
            <map to='#20af84'>
              <bucket>&quot;South Sudan&quot;</bucket>
            </map>
            <map to='#21ad7c'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#22aac3'>
              <bucket>&quot;West Bank and Gaza&quot;</bucket>
            </map>
            <map to='#22b088'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#23ac77'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#23b18c'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#24acc3'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#25aec2'>
              <bucket>&quot;Venezuela&quot;</bucket>
            </map>
            <map to='#25b290'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#26ab73'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#26b494'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#27b0c1'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
            <map to='#28aa6e'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#28b598'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#29b2c1'>
              <bucket>&quot;US&quot;</bucket>
            </map>
            <map to='#29b69c'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#2ba96a'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#2bb4c0'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#2bb79f'>
              <bucket>&quot;Syria&quot;</bucket>
            </map>
            <map to='#2cb9a3'>
              <bucket>&quot;Taiwan*&quot;</bucket>
            </map>
            <map to='#2da865'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#2db6c0'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#2eb8bf'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#2ebaa7'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map>
            <map to='#30a761'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map>
            <map to='#30babf'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#30bbab'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
            <map to='#31bcaf'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#32a65c'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#32bcbe'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#33bdb3'>
              <bucket>&quot;Timor-Leste&quot;</bucket>
            </map>
            <map to='#34bebd'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#34bfb7'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#35a558'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#36c0bb'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#36c0bd'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#37a453'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#39a34f'>
              <bucket>&quot;Sao Tome and Principe&quot;</bucket>
            </map>
            <map to='#3ca24a'>
              <bucket>&quot;San Marino&quot;</bucket>
            </map>
            <map to='#3ea146'>
              <bucket>&quot;Saint Vincent and the Grenadines&quot;</bucket>
            </map>
            <map to='#41a041'>
              <bucket>&quot;Saint Lucia&quot;</bucket>
            </map>
            <map to='#439f3d'>
              <bucket>&quot;Saint Kitts and Nevis&quot;</bucket>
            </map>
            <map to='#489f3a'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#4f7cba'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#50a138'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='#537bba'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#577abb'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#58a336'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#5b79bb'>
              <bucket>&quot;Andorra&quot;</bucket>
            </map>
            <map to='#5f78bc'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#5fa535'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#6377bd'>
              <bucket>&quot;Antigua and Barbuda&quot;</bucket>
            </map>
            <map to='#67a733'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#6876bd'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#6c76be'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#6fa932'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#7075bf'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#7474bf'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#76ab30'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#7873c0'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#7d72c1'>
              <bucket>&quot;Bahamas&quot;</bucket>
            </map>
            <map to='#7ead2e'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#8171c1'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#8571c2'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#86af2d'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#8970c3'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#8d6fc3'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#8db12b'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map>
            <map to='#926ec3'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#95b32a'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#966ec3'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#9b6ec3'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#9db528'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#9f6dc2'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#a46dc2'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#a4b726'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#a86cc1'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#acb925'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#ad6cc1'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#b16cc1'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#b4bb23'>
              <bucket>&quot;North Macedonia&quot;</bucket>
            </map>
            <map to='#b66bc0'>
              <bucket>&quot;Brunei&quot;</bucket>
            </map>
            <map to='#ba6bc0'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#bf6abf'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#bfbc21'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#c36abf'>
              <bucket>&quot;Burma&quot;</bucket>
            </map>
            <map to='#c3bc21'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#c7bc21'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#c86abf'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#cbbb21'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#cc69be'>
              <bucket>&quot;Cabo Verde&quot;</bucket>
            </map>
            <map to='#cfbb21'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#d169be'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#d3bb21'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#d669be'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#d7bb21'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#d86abc'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#daba21'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#db6bbb'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='#dd6cba'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#deba21'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#df3029'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#df3227'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#e06db8'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#e1312d'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#e13725'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#e23131'>
              <bucket>&quot;Holy See&quot;</bucket>
            </map>
            <map to='#e26fb7'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#e2ba21'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#e33235'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#e33d24'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#e44223'>
              <bucket>&quot;Iran&quot;</bucket>
            </map>
            <map to='#e53339'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='#e570b6'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#e6343c'>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
            </map>
            <map to='#e64721'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#e6ba21'>
              <bucket>&quot;Monaco&quot;</bucket>
            </map>
            <map to='#e73540'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#e74c20'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#e871b4'>
              <bucket>&quot;Comoros&quot;</bucket>
            </map>
            <map to='#e93544'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#e9511f'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#ea3648'>
              <bucket>&quot;Grenada&quot;</bucket>
            </map>
            <map to='#ea72b3'>
              <bucket>&quot;Congo (Brazzaville)&quot;</bucket>
            </map>
            <map to='#eab921'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map>
            <map to='#eb374c'>
              <bucket>&quot;Greenland&quot;</bucket>
            </map>
            <map to='#eb571d'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#ec5c1c'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#ed384f'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#ed74b2'>
              <bucket>&quot;Congo (Kinshasa)&quot;</bucket>
            </map>
            <map to='#ee3853'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#ee611b'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#eeb921'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#ef3957'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#ef6619'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#ef75b1'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#f13a5b'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#f16c18'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#f23b5f'>
              <bucket>&quot;Gambia&quot;</bucket>
            </map>
            <map to='#f276af'>
              <bucket>&quot;Cote d&apos;Ivoire&quot;</bucket>
            </map>
            <map to='#f2b921'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#f37117'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#f43c63'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#f44067'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#f47615'>
              <bucket>&quot;Kosovo&quot;</bucket>
            </map>
            <map to='#f477ae'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#f5446c'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#f54870'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map>
            <map to='#f64c75'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#f67b14'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#f6b921'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#f75079'>
              <bucket>&quot;Eswatini&quot;</bucket>
            </map>
            <map to='#f7547e'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#f778ad'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#f85883'>
              <bucket>&quot;Eritrea&quot;</bucket>
            </map>
            <map to='#f88113'>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
            </map>
            <map to='#f88413'>
              <bucket>&quot;Laos&quot;</bucket>
            </map>
            <map to='#f88814'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#f88b15'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#f88f16'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map>
            <map to='#f89317'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#f89618'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#f89a19'>
              <bucket>&quot;Liechtenstein&quot;</bucket>
            </map>
            <map to='#f89d1a'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#f8a11b'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#f8a51c'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#f8a81c'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#f8ac1d'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#f8af1e'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#f8b31f'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#f8b720'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#f95d87'>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
            </map>
            <map to='#f9618c'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#fa6590'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#fa7aab'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#fb6995'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#fb6d99'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#fc719e'>
              <bucket>&quot;Dominica&quot;</bucket>
            </map>
            <map to='#fc7baa'>
              <bucket>&quot;Czechia&quot;</bucket>
            </map>
            <map to='#fd75a3'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#fd79a7'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='cov19_country_count_2.csv' id='cov19_country_count_2.csv_E5A17B5E6DAE407EB218A6C6CDA4F492'>
            <properties context=''>
              <relation connection='textscan.0upenzr0hd8r591e8cw710k1v3cp (copy)' name='cov19_country_count_2.csv' table='[cov19_country_count_2#csv]' type='table'>
                <columns character-set='UTF-8' header='no' locale='en_US' separator=','>
                  <column datatype='string' name='F1' ordinal='0' />
                  <column datatype='string' name='F2' ordinal='1' />
                  <column datatype='integer' name='F3' ordinal='2' />
                  <column datatype='integer' name='F4' ordinal='3' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <actions>
    <action caption='Type Highlight' name='[Action1]'>
      <activation auto-clear='true' type='on-hover' />
      <source dashboard='COVID19_Sankeychar' type='sheet' worksheet='Type' />
      <command command='tsc:brush'>
        <param name='exclude' value='Country' />
        <param name='special-fields' value='all' />
        <param name='target' value='COVID19_Sankeychar' />
      </command>
    </action>
    <action caption='Country Highlight' name='[Action2]'>
      <activation auto-clear='true' type='on-hover' />
      <source dashboard='COVID19_Sankeychar' type='sheet' worksheet='Country' />
      <command command='tsc:brush'>
        <param name='exclude' value='Type' />
        <param name='special-fields' value='all' />
        <param name='target' value='COVID19_Sankeychar' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='COVID19_confirmed page'>
      <table>
        <view>
          <datasources>
            <datasource caption='sars_country_count' name='federated.1ukkj5517ipw851d8k09o05hcg93' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1ukkj5517ipw851d8k09o05hcg93'>
            <column caption='Confirmed (cov19 date country count.csv)' datatype='integer' name='[Confirmed (cov19_date_country_count.csv)]' role='measure' type='quantitative' />
            <column caption='Country (cov19 date country count.csv)' datatype='string' name='[Country (cov19_date_country_count.csv)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Date (cov19 date country count.csv)' datatype='date' name='[Date (cov19_date_country_count.csv)]' role='dimension' type='ordinal' />
            <column-instance column='[Country (cov19_date_country_count.csv)]' derivation='None' name='[none:Country (cov19_date_country_count.csv):nk]' pivot='key' type='nominal' />
            <column-instance column='[Confirmed (cov19_date_country_count.csv)]' derivation='Sum' name='[sum:Confirmed (cov19_date_country_count.csv):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date (cov19_date_country_count.csv)]' derivation='Month-Trunc' name='[tmn:Date (cov19_date_country_count.csv):ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1ukkj5517ipw851d8k09o05hcg93].[none:Country (cov19_date_country_count.csv):nk]'>
            <groupfilter from='&quot;Afghanistan&quot;' function='range' level='[none:Country (cov19_date_country_count.csv):nk]' to='&quot;Zimbabwe&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1ukkj5517ipw851d8k09o05hcg93].[none:Country (cov19_date_country_count.csv):nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
          <style-rule element='page-card-title'>
            <format attr='title' value='Month of Date '>
              <formatted-text>
                <run>Month of Date </run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <size column='[federated.1ukkj5517ipw851d8k09o05hcg93].[sum:Confirmed (cov19_date_country_count.csv):qk]' />
              <text column='[federated.1ukkj5517ipw851d8k09o05hcg93].[none:Country (cov19_date_country_count.csv):nk]' />
              <color column='[federated.1ukkj5517ipw851d8k09o05hcg93].[none:Country (cov19_date_country_count.csv):nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
        <pages>
          <column>[federated.1ukkj5517ipw851d8k09o05hcg93].[tmn:Date (cov19_date_country_count.csv):ok]</column>
        </pages>
        <page-trail-options enabled='true' lines='true' />
      </table>
      <simple-id uuid='{37A2F23B-49F7-4BC5-B067-ED774220B8B0}' />
    </worksheet>
    <worksheet name='COVID19_deaths_page'>
      <table>
        <view>
          <datasources>
            <datasource caption='sars_country_count' name='federated.1ukkj5517ipw851d8k09o05hcg93' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1ukkj5517ipw851d8k09o05hcg93'>
            <column caption='Country (cov19 date country count.csv)' datatype='string' name='[Country (cov19_date_country_count.csv)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Date (cov19 date country count.csv)' datatype='date' name='[Date (cov19_date_country_count.csv)]' role='dimension' type='ordinal' />
            <column caption='Deaths (cov19 date country count.csv)' datatype='integer' name='[Deaths (cov19_date_country_count.csv)]' role='measure' type='quantitative' />
            <column-instance column='[Country (cov19_date_country_count.csv)]' derivation='None' name='[none:Country (cov19_date_country_count.csv):nk]' pivot='key' type='nominal' />
            <column-instance column='[Deaths (cov19_date_country_count.csv)]' derivation='Sum' name='[sum:Deaths (cov19_date_country_count.csv):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date (cov19_date_country_count.csv)]' derivation='Month-Trunc' name='[tmn:Date (cov19_date_country_count.csv):ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1ukkj5517ipw851d8k09o05hcg93].[none:Country (cov19_date_country_count.csv):nk]'>
            <groupfilter from='&quot;Afghanistan&quot;' function='range' level='[none:Country (cov19_date_country_count.csv):nk]' to='&quot;Zimbabwe&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1ukkj5517ipw851d8k09o05hcg93].[none:Country (cov19_date_country_count.csv):nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <size column='[federated.1ukkj5517ipw851d8k09o05hcg93].[sum:Deaths (cov19_date_country_count.csv):qk]' />
              <text column='[federated.1ukkj5517ipw851d8k09o05hcg93].[none:Country (cov19_date_country_count.csv):nk]' />
              <color column='[federated.1ukkj5517ipw851d8k09o05hcg93].[none:Country (cov19_date_country_count.csv):nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
        <pages>
          <column>[federated.1ukkj5517ipw851d8k09o05hcg93].[tmn:Date (cov19_date_country_count.csv):ok]</column>
        </pages>
        <page-trail-options enabled='true' lines='true' />
      </table>
      <simple-id uuid='{9B3F364B-D8A2-4DF6-85D9-FD3A4CDE8818}' />
    </worksheet>
    <worksheet name='COVID19_recovered_page'>
      <table>
        <view>
          <datasources>
            <datasource caption='sars_country_count' name='federated.1ukkj5517ipw851d8k09o05hcg93' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1ukkj5517ipw851d8k09o05hcg93'>
            <column caption='Country (cov19 date country count.csv)' datatype='string' name='[Country (cov19_date_country_count.csv)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Date (cov19 date country count.csv)' datatype='date' name='[Date (cov19_date_country_count.csv)]' role='dimension' type='ordinal' />
            <column caption='Recovered (cov19 date country count.csv)' datatype='integer' name='[Recovered (cov19_date_country_count.csv)]' role='measure' type='quantitative' />
            <column-instance column='[Country (cov19_date_country_count.csv)]' derivation='None' name='[none:Country (cov19_date_country_count.csv):nk]' pivot='key' type='nominal' />
            <column-instance column='[Recovered (cov19_date_country_count.csv)]' derivation='Sum' name='[sum:Recovered (cov19_date_country_count.csv):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date (cov19_date_country_count.csv)]' derivation='Month-Trunc' name='[tmn:Date (cov19_date_country_count.csv):ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1ukkj5517ipw851d8k09o05hcg93].[none:Country (cov19_date_country_count.csv):nk]'>
            <groupfilter from='&quot;Afghanistan&quot;' function='range' level='[none:Country (cov19_date_country_count.csv):nk]' to='&quot;Zimbabwe&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1ukkj5517ipw851d8k09o05hcg93].[none:Country (cov19_date_country_count.csv):nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <size column='[federated.1ukkj5517ipw851d8k09o05hcg93].[sum:Recovered (cov19_date_country_count.csv):qk]' />
              <text column='[federated.1ukkj5517ipw851d8k09o05hcg93].[none:Country (cov19_date_country_count.csv):nk]' />
              <color column='[federated.1ukkj5517ipw851d8k09o05hcg93].[none:Country (cov19_date_country_count.csv):nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
        <pages>
          <column>[federated.1ukkj5517ipw851d8k09o05hcg93].[tmn:Date (cov19_date_country_count.csv):ok]</column>
        </pages>
        <page-trail-options enabled='true' lines='true' />
      </table>
      <simple-id uuid='{72E49925-455E-46E5-B4DD-A83FC4BF6DC1}' />
    </worksheet>
    <worksheet name='COVID_19_mortality_rate'>
      <table>
        <view>
          <datasources>
            <datasource caption='cov19_country_count' name='federated.00wkklw1tfbk4w16c9h1s12blyis' />
          </datasources>
          <datasource-dependencies datasource='federated.00wkklw1tfbk4w16c9h1s12blyis'>
            <column caption='Mortality rate' datatype='real' name='[Calculation_4102427483369193472]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Deaths]/[Confirmed]' />
            </column>
            <column datatype='integer' name='[Confirmed]' role='measure' type='quantitative' />
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='integer' name='[Deaths]' role='measure' type='quantitative' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_4102427483369193472]' derivation='Sum' name='[sum:Calculation_4102427483369193472:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <manual-sort column='[federated.00wkklw1tfbk4w16c9h1s12blyis].[none:Country:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Yemen&quot;</bucket>
              <bucket>&quot;Belgium&quot;</bucket>
              <bucket>&quot;France&quot;</bucket>
              <bucket>&quot;Italy&quot;</bucket>
              <bucket>&quot;United Kingdom&quot;</bucket>
              <bucket>&quot;Hungary&quot;</bucket>
              <bucket>&quot;Netherlands&quot;</bucket>
              <bucket>&quot;Mexico&quot;</bucket>
              <bucket>&quot;Antigua and Barbuda&quot;</bucket>
              <bucket>&quot;Western Sahara&quot;</bucket>
              <bucket>&quot;Spain&quot;</bucket>
              <bucket>&quot;Bahamas&quot;</bucket>
              <bucket>&quot;Sweden&quot;</bucket>
              <bucket>&quot;Belize&quot;</bucket>
              <bucket>&quot;Chad&quot;</bucket>
              <bucket>&quot;Ecuador&quot;</bucket>
              <bucket>&quot;Canada&quot;</bucket>
              <bucket>&quot;Slovenia&quot;</bucket>
              <bucket>&quot;Barbados&quot;</bucket>
              <bucket>&quot;Algeria&quot;</bucket>
              <bucket>&quot;Guyana&quot;</bucket>
              <bucket>&quot;Ireland&quot;</bucket>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
              <bucket>&quot;Niger&quot;</bucket>
              <bucket>&quot;Liberia&quot;</bucket>
              <bucket>&quot;Romania&quot;</bucket>
              <bucket>&quot;Switzerland&quot;</bucket>
              <bucket>&quot;Sudan&quot;</bucket>
              <bucket>&quot;Andorra&quot;</bucket>
              <bucket>&quot;San Marino&quot;</bucket>
              <bucket>&quot;Burkina Faso&quot;</bucket>
              <bucket>&quot;Greece&quot;</bucket>
              <bucket>&quot;Indonesia&quot;</bucket>
              <bucket>&quot;Mali&quot;</bucket>
              <bucket>&quot;China&quot;</bucket>
              <bucket>&quot;US&quot;</bucket>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
              <bucket>&quot;Japan&quot;</bucket>
              <bucket>&quot;Bulgaria&quot;</bucket>
              <bucket>&quot;Brazil&quot;</bucket>
              <bucket>&quot;Denmark&quot;</bucket>
              <bucket>&quot;Croatia&quot;</bucket>
              <bucket>&quot;Iran&quot;</bucket>
              <bucket>&quot;Germany&quot;</bucket>
              <bucket>&quot;North Macedonia&quot;</bucket>
              <bucket>&quot;Finland&quot;</bucket>
              <bucket>&quot;Mauritania&quot;</bucket>
              <bucket>&quot;Tunisia&quot;</bucket>
              <bucket>&quot;Lithuania&quot;</bucket>
              <bucket>&quot;Poland&quot;</bucket>
              <bucket>&quot;Sierra Leone&quot;</bucket>
              <bucket>&quot;Tanzania&quot;</bucket>
              <bucket>&quot;Philippines&quot;</bucket>
              <bucket>&quot;Portugal&quot;</bucket>
              <bucket>&quot;Angola&quot;</bucket>
              <bucket>&quot;Monaco&quot;</bucket>
              <bucket>&quot;Austria&quot;</bucket>
              <bucket>&quot;Guatemala&quot;</bucket>
              <bucket>&quot;Cuba&quot;</bucket>
              <bucket>&quot;Egypt&quot;</bucket>
              <bucket>&quot;Nicaragua&quot;</bucket>
              <bucket>&quot;Estonia&quot;</bucket>
              <bucket>&quot;Moldova&quot;</bucket>
              <bucket>&quot;Honduras&quot;</bucket>
              <bucket>&quot;Colombia&quot;</bucket>
              <bucket>&quot;Syria&quot;</bucket>
              <bucket>&quot;India&quot;</bucket>
              <bucket>&quot;Bolivia&quot;</bucket>
              <bucket>&quot;Somalia&quot;</bucket>
              <bucket>&quot;Czechia&quot;</bucket>
              <bucket>&quot;Iraq&quot;</bucket>
              <bucket>&quot;Congo (Brazzaville)&quot;</bucket>
              <bucket>&quot;Peru&quot;</bucket>
              <bucket>&quot;Mauritius&quot;</bucket>
              <bucket>&quot;Gambia&quot;</bucket>
              <bucket>&quot;Uruguay&quot;</bucket>
              <bucket>&quot;Cameroon&quot;</bucket>
              <bucket>&quot;Norway&quot;</bucket>
              <bucket>&quot;Ukraine&quot;</bucket>
              <bucket>&quot;Montenegro&quot;</bucket>
              <bucket>&quot;Kenya&quot;</bucket>
              <bucket>&quot;Luxembourg&quot;</bucket>
              <bucket>&quot;Turkey&quot;</bucket>
              <bucket>&quot;Nigeria&quot;</bucket>
              <bucket>&quot;Dominican Republic&quot;</bucket>
              <bucket>&quot;Argentina&quot;</bucket>
              <bucket>&quot;Latvia&quot;</bucket>
              <bucket>&quot;Suriname&quot;</bucket>
              <bucket>&quot;Togo&quot;</bucket>
              <bucket>&quot;Morocco&quot;</bucket>
              <bucket>&quot;Burma&quot;</bucket>
              <bucket>&quot;South Korea&quot;</bucket>
              <bucket>&quot;Congo (Kinshasa)&quot;</bucket>
              <bucket>&quot;Kosovo&quot;</bucket>
              <bucket>&quot;Albania&quot;</bucket>
              <bucket>&quot;Lebanon&quot;</bucket>
              <bucket>&quot;South Africa&quot;</bucket>
              <bucket>&quot;Brunei&quot;</bucket>
              <bucket>&quot;Panama&quot;</bucket>
              <bucket>&quot;Libya&quot;</bucket>
              <bucket>&quot;Serbia&quot;</bucket>
              <bucket>&quot;El Salvador&quot;</bucket>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
              <bucket>&quot;Pakistan&quot;</bucket>
              <bucket>&quot;Afghanistan&quot;</bucket>
              <bucket>&quot;Thailand&quot;</bucket>
              <bucket>&quot;Chile&quot;</bucket>
              <bucket>&quot;Cyprus&quot;</bucket>
              <bucket>&quot;Slovakia&quot;</bucket>
              <bucket>&quot;Sao Tome and Principe&quot;</bucket>
              <bucket>&quot;Haiti&quot;</bucket>
              <bucket>&quot;Benin&quot;</bucket>
              <bucket>&quot;South Sudan&quot;</bucket>
              <bucket>&quot;Ethiopia&quot;</bucket>
              <bucket>&quot;Armenia&quot;</bucket>
              <bucket>&quot;Botswana&quot;</bucket>
              <bucket>&quot;Jamaica&quot;</bucket>
              <bucket>&quot;Georgia&quot;</bucket>
              <bucket>&quot;Taiwan*&quot;</bucket>
              <bucket>&quot;Israel&quot;</bucket>
              <bucket>&quot;Comoros&quot;</bucket>
              <bucket>&quot;New Zealand&quot;</bucket>
              <bucket>&quot;Malaysia&quot;</bucket>
              <bucket>&quot;Australia&quot;</bucket>
              <bucket>&quot;Malta&quot;</bucket>
              <bucket>&quot;Bangladesh&quot;</bucket>
              <bucket>&quot;Russia&quot;</bucket>
              <bucket>&quot;Senegal&quot;</bucket>
              <bucket>&quot;Liechtenstein&quot;</bucket>
              <bucket>&quot;Azerbaijan&quot;</bucket>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
              <bucket>&quot;Malawi&quot;</bucket>
              <bucket>&quot;Zimbabwe&quot;</bucket>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
              <bucket>&quot;Paraguay&quot;</bucket>
              <bucket>&quot;Tajikistan&quot;</bucket>
              <bucket>&quot;Burundi&quot;</bucket>
              <bucket>&quot;Djibouti&quot;</bucket>
              <bucket>&quot;Jordan&quot;</bucket>
              <bucket>&quot;Madagascar&quot;</bucket>
              <bucket>&quot;Cabo Verde&quot;</bucket>
              <bucket>&quot;Venezuela&quot;</bucket>
              <bucket>&quot;Kuwait&quot;</bucket>
              <bucket>&quot;Cote d&apos;Ivoire&quot;</bucket>
              <bucket>&quot;Zambia&quot;</bucket>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
              <bucket>&quot;Eswatini&quot;</bucket>
              <bucket>&quot;Gabon&quot;</bucket>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
              <bucket>&quot;Costa Rica&quot;</bucket>
              <bucket>&quot;Mozambique&quot;</bucket>
              <bucket>&quot;West Bank and Gaza&quot;</bucket>
              <bucket>&quot;Central African Republic&quot;</bucket>
              <bucket>&quot;Sri Lanka&quot;</bucket>
              <bucket>&quot;Belarus&quot;</bucket>
              <bucket>&quot;Kazakhstan&quot;</bucket>
              <bucket>&quot;Guinea&quot;</bucket>
              <bucket>&quot;Iceland&quot;</bucket>
              <bucket>&quot;Ghana&quot;</bucket>
              <bucket>&quot;Oman&quot;</bucket>
              <bucket>&quot;Maldives&quot;</bucket>
              <bucket>&quot;Uzbekistan&quot;</bucket>
              <bucket>&quot;Rwanda&quot;</bucket>
              <bucket>&quot;Nepal&quot;</bucket>
              <bucket>&quot;Bahrain&quot;</bucket>
              <bucket>&quot;Qatar&quot;</bucket>
              <bucket>&quot;Singapore&quot;</bucket>
              <bucket>&quot;Bhutan&quot;</bucket>
              <bucket>&quot;Cambodia&quot;</bucket>
              <bucket>&quot;Dominica&quot;</bucket>
              <bucket>&quot;Eritrea&quot;</bucket>
              <bucket>&quot;Fiji&quot;</bucket>
              <bucket>&quot;Greenland&quot;</bucket>
              <bucket>&quot;Grenada&quot;</bucket>
              <bucket>&quot;Holy See&quot;</bucket>
              <bucket>&quot;Laos&quot;</bucket>
              <bucket>&quot;Lesotho&quot;</bucket>
              <bucket>&quot;Mongolia&quot;</bucket>
              <bucket>&quot;Namibia&quot;</bucket>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
              <bucket>&quot;Saint Kitts and Nevis&quot;</bucket>
              <bucket>&quot;Saint Lucia&quot;</bucket>
              <bucket>&quot;Saint Vincent and the Grenadines&quot;</bucket>
              <bucket>&quot;Seychelles&quot;</bucket>
              <bucket>&quot;Timor-Leste&quot;</bucket>
              <bucket>&quot;Uganda&quot;</bucket>
              <bucket>&quot;Vietnam&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </manual-sort>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='1' field='[federated.00wkklw1tfbk4w16c9h1s12blyis].[sum:Calculation_4102427483369193472:qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
            <format attr='tick-color' value='#00000000' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.00wkklw1tfbk4w16c9h1s12blyis].[sum:Calculation_4102427483369193472:qk]' value='p0.0%' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.00wkklw1tfbk4w16c9h1s12blyis].[sum:Calculation_4102427483369193472:qk]' palette='red_green_gold_diverging_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='dropline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='stroke-color' value='#f9a655' />
            <format attr='line-visibility' value='on' />
            <format attr='line-pattern-only' value='solid' />
            <format attr='stroke-size' value='1' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.00wkklw1tfbk4w16c9h1s12blyis].[sum:Calculation_4102427483369193472:qk]' />
            </encodings>
            <reference-line axis-column='[federated.00wkklw1tfbk4w16c9h1s12blyis].[sum:Calculation_4102427483369193472:qk]' enable-instant-analytics='true' formula='average' id='refline0' label-type='automatic' probability='95' scope='per-pane' value-column='[federated.00wkklw1tfbk4w16c9h1s12blyis].[sum:Calculation_4102427483369193472:qk]' z-order='1' />
            <style>
              <style-rule element='trendline'>
                <format attr='line-visibility' value='on' />
                <format attr='line-pattern-only' value='dotted' />
                <format attr='stroke-color' value='#8cd17d67' />
                <format attr='stroke-size' value='1' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.00wkklw1tfbk4w16c9h1s12blyis].[sum:Calculation_4102427483369193472:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.00wkklw1tfbk4w16c9h1s12blyis].[sum:Calculation_4102427483369193472:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.3733149766921997' />
              </style-rule>
              <style-rule element='trendline'>
                <format attr='line-visibility' value='on' />
                <format attr='line-pattern-only' value='dotted' />
                <format attr='stroke-color' value='#8cd17d67' />
                <format attr='stroke-size' value='1' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.00wkklw1tfbk4w16c9h1s12blyis].[sum:Calculation_4102427483369193472:qk]' y-index='1'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.00wkklw1tfbk4w16c9h1s12blyis].[sum:Calculation_4102427483369193472:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.9010497331619263' />
              </style-rule>
              <style-rule element='trendline'>
                <format attr='line-visibility' value='on' />
                <format attr='line-pattern-only' value='dotted' />
                <format attr='stroke-color' value='#8cd17d67' />
                <format attr='stroke-size' value='1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.00wkklw1tfbk4w16c9h1s12blyis].[sum:Calculation_4102427483369193472:qk] + [federated.00wkklw1tfbk4w16c9h1s12blyis].[sum:Calculation_4102427483369193472:qk])</rows>
        <cols>[federated.00wkklw1tfbk4w16c9h1s12blyis].[none:Country:nk]</cols>
      </table>
      <simple-id uuid='{9283947B-8359-4287-A2A1-81711BEB204C}' />
    </worksheet>
    <worksheet name='Country'>
      <layout-options>
        <title>
          <formatted-text />
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='cov19_country_count_2 (2)' name='federated.0axu3yq0bos93d101yqpk0yd5z2i (copy)' />
          </datasources>
          <datasource-dependencies datasource='federated.0axu3yq0bos93d101yqpk0yd5z2i (copy)'>
            <column caption='Country' datatype='string' name='[F1]' role='dimension' type='nominal' />
            <column caption='Number' datatype='integer' name='[F3]' role='measure' type='quantitative' />
            <column-instance column='[F1]' derivation='None' name='[none:F1:nk]' pivot='key' type='nominal' />
            <column-instance column='[F3]' derivation='Sum' name='[pcto:sum:F3:qk:5]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Columns' type='PctTotal' />
            </column-instance>
            <column-instance column='[F3]' derivation='Sum' name='[pcto:sum:F3:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
          </datasource-dependencies>
          <natural-sort column='[federated.0axu3yq0bos93d101yqpk0yd5z2i (copy)].[none:F1:nk]' direction='ASC' />
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='display' class='0' field='[federated.0axu3yq0bos93d101yqpk0yd5z2i (copy)].[pcto:sum:F3:qk:5]' scope='rows' value='false' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.0axu3yq0bos93d101yqpk0yd5z2i (copy)].[pcto:sum:F3:qk]' value='p0.0%' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='line-pattern-only' value='solid' />
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0axu3yq0bos93d101yqpk0yd5z2i (copy)].[none:F1:nk]' />
              <text column='[federated.0axu3yq0bos93d101yqpk0yd5z2i (copy)].[none:F1:nk]' />
              <text column='[federated.0axu3yq0bos93d101yqpk0yd5z2i (copy)].[pcto:sum:F3:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0axu3yq0bos93d101yqpk0yd5z2i (copy)].[pcto:sum:F3:qk:5]</rows>
        <cols />
        <tooltip-style tooltip-mode='none' />
      </table>
      <simple-id uuid='{250C15E8-8A37-4F8C-9C0E-48A02FC1B95E}' />
    </worksheet>
    <worksheet name='Sankey'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontsize='11'>Sankey Chart</run>
            <run>Æ&#10;</run>
            <run fontsize='9'>COVID-19</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='cov19_country_count_2 (2)' name='federated.0axu3yq0bos93d101yqpk0yd5z2i (copy)' />
          </datasources>
          <datasource-dependencies datasource='federated.0axu3yq0bos93d101yqpk0yd5z2i (copy)'>
            <column caption='t' datatype='real' name='[Calculation_4228246797991231488]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(index()-25)/4'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='logistic' datatype='real' name='[Calculation_4228246797991317505]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='1/(1+EXP(1)^-[Calculation_4228246797991231488])'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Size' datatype='real' name='[Calculation_4228246797991481346]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='RUNNING_AVG(SUM([F3]))'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Rank1' datatype='real' name='[Calculation_4228246797991591939]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='RUNNING_SUM(SUM([F3]))/TOTAL(SUM([F3]))'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Rank2' datatype='real' name='[Calculation_4228246797991653380]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='RUNNING_SUM(SUM([F3]))/TOTAL(SUM([F3]))'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='F(t)' datatype='real' name='[Calculation_4228246797991718917]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_4228246797991591939]+(([Calculation_4228246797991653380]-[Calculation_4228246797991591939])*[Calculation_4228246797991317505])'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Country' datatype='string' name='[F1]' role='dimension' type='nominal' />
            <column caption='Type' datatype='string' name='[F2]' role='dimension' type='nominal' />
            <column caption='Number' datatype='integer' name='[F3]' role='measure' type='quantitative' />
            <column aggregation='None' caption='rowtype' datatype='integer' name='[F4 (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='0' formula='[F4]' peg='0' size='1' />
            </column>
            <column datatype='integer' name='[F4]' role='measure' type='quantitative' />
            <column-instance column='[F1]' derivation='None' name='[none:F1:nk]' pivot='key' type='nominal' />
            <column-instance column='[F2]' derivation='None' name='[none:F2:nk]' pivot='key' type='nominal' />
            <column-instance column='[F4 (bin)]' derivation='None' name='[none:F4 (bin):ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_4228246797991231488]' derivation='User' name='[usr:Calculation_4228246797991231488:qk:2]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[federated.0axu3yq0bos93d101yqpk0yd5z2i (copy)].[F4 (bin)]' ordering-type='Field' />
            </column-instance>
            <column-instance column='[Calculation_4228246797991481346]' derivation='User' name='[usr:Calculation_4228246797991481346:qk:3]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[federated.0axu3yq0bos93d101yqpk0yd5z2i (copy)].[F4 (bin)]' ordering-type='Field' />
            </column-instance>
            <column-instance column='[Calculation_4228246797991718917]' derivation='User' name='[usr:Calculation_4228246797991718917:qk:44]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
              <table-calc field='[federated.0axu3yq0bos93d101yqpk0yd5z2i (copy)].[Calculation_4228246797991653380]' ordering-type='Field'>
                <order field='[federated.0axu3yq0bos93d101yqpk0yd5z2i (copy)].[F1]' />
                <order field='[federated.0axu3yq0bos93d101yqpk0yd5z2i (copy)].[F2]' />
                <order field='[federated.0axu3yq0bos93d101yqpk0yd5z2i (copy)].[F4 (bin)]' />
              </table-calc>
              <table-calc field='[federated.0axu3yq0bos93d101yqpk0yd5z2i (copy)].[Calculation_4228246797991231488]' ordering-field='[federated.0axu3yq0bos93d101yqpk0yd5z2i (copy)].[F4 (bin)]' ordering-type='Field' />
              <table-calc field='[federated.0axu3yq0bos93d101yqpk0yd5z2i (copy)].[Calculation_4228246797991317505]' ordering-type='Rows' />
              <table-calc field='[federated.0axu3yq0bos93d101yqpk0yd5z2i (copy)].[Calculation_4228246797991591939]' ordering-type='Field'>
                <order field='[federated.0axu3yq0bos93d101yqpk0yd5z2i (copy)].[F2]' />
                <order field='[federated.0axu3yq0bos93d101yqpk0yd5z2i (copy)].[F1]' />
                <order field='[federated.0axu3yq0bos93d101yqpk0yd5z2i (copy)].[F4 (bin)]' />
              </table-calc>
            </column-instance>
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0axu3yq0bos93d101yqpk0yd5z2i (copy)].[usr:Calculation_4228246797991231488:qk:2]' field-type='quantitative' max='5.0' min='-5.0' range-type='fixed' scope='cols' type='space' />
            <format attr='display' class='0' field='[federated.0axu3yq0bos93d101yqpk0yd5z2i (copy)].[usr:Calculation_4228246797991718917:qk:44]' scope='rows' value='false' />
            <format attr='display' class='0' field='[federated.0axu3yq0bos93d101yqpk0yd5z2i (copy)].[usr:Calculation_4228246797991231488:qk:2]' scope='cols' value='false' />
            <encoding attr='space' class='0' field='[federated.0axu3yq0bos93d101yqpk0yd5z2i (copy)].[usr:Calculation_4228246797991718917:qk:44]' field-type='quantitative' max='1.0' min='0.0' range-type='fixed' reverse='true' scope='rows' type='space' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <lod column='[federated.0axu3yq0bos93d101yqpk0yd5z2i (copy)].[none:F1:nk]' />
              <path column='[federated.0axu3yq0bos93d101yqpk0yd5z2i (copy)].[none:F4 (bin):ok]' />
              <color column='[federated.0axu3yq0bos93d101yqpk0yd5z2i (copy)].[none:F2:nk]' />
              <size column='[federated.0axu3yq0bos93d101yqpk0yd5z2i (copy)].[usr:Calculation_4228246797991481346:qk:3]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.2193922996520996' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0axu3yq0bos93d101yqpk0yd5z2i (copy)].[usr:Calculation_4228246797991718917:qk:44]</rows>
        <cols>[federated.0axu3yq0bos93d101yqpk0yd5z2i (copy)].[usr:Calculation_4228246797991231488:qk:2]</cols>
        <show-full-range>
          <column>[federated.0axu3yq0bos93d101yqpk0yd5z2i (copy)].[F4 (bin)]</column>
        </show-full-range>
        <tooltip-style tooltip-mode='none' />
      </table>
      <simple-id uuid='{4DCD5D6F-BC49-42D0-8C3C-20004B0E12EF}' />
    </worksheet>
    <worksheet name='Type'>
      <layout-options>
        <title>
          <formatted-text />
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='cov19_country_count_2 (2)' name='federated.0axu3yq0bos93d101yqpk0yd5z2i (copy)' />
          </datasources>
          <datasource-dependencies datasource='federated.0axu3yq0bos93d101yqpk0yd5z2i (copy)'>
            <column caption='Type' datatype='string' name='[F2]' role='dimension' type='nominal' />
            <column caption='Number' datatype='integer' name='[F3]' role='measure' type='quantitative' />
            <column-instance column='[F2]' derivation='None' name='[none:F2:nk]' pivot='key' type='nominal' />
            <column-instance column='[F3]' derivation='Sum' name='[pcto:sum:F3:qk:5]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Columns' type='PctTotal' />
            </column-instance>
            <column-instance column='[F3]' derivation='Sum' name='[pcto:sum:F3:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='display' class='0' field='[federated.0axu3yq0bos93d101yqpk0yd5z2i (copy)].[pcto:sum:F3:qk:5]' scope='rows' value='false' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.0axu3yq0bos93d101yqpk0yd5z2i (copy)].[pcto:sum:F3:qk]' value='p0.0%' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0axu3yq0bos93d101yqpk0yd5z2i (copy)].[none:F2:nk]' />
              <text column='[federated.0axu3yq0bos93d101yqpk0yd5z2i (copy)].[none:F2:nk]' />
              <text column='[federated.0axu3yq0bos93d101yqpk0yd5z2i (copy)].[pcto:sum:F3:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0axu3yq0bos93d101yqpk0yd5z2i (copy)].[pcto:sum:F3:qk:5]</rows>
        <cols />
        <tooltip-style tooltip-mode='none' />
      </table>
      <simple-id uuid='{2822461A-7D0D-448F-9982-36A6C5D7B5E2}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='COVID19_Sankeychar'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='4' w='100000' x='0' y='0'>
          <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='97875' id='7' param='horz' w='99000' x='500' y='1500'>
            <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='97875' id='5' w='99000' x='500' y='1500'>
              <zone h='97875' id='3' name='Sankey' w='74753' x='12265' y='1500'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='97875' id='12' name='Type' w='11765' x='500' y='1500'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='0' />
                </zone-style>
              </zone>
              <zone h='97875' id='10' name='Country' w='12482' x='87018' y='1500'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='0' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='5' />
            <format attr='margin-top' value='12' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='900' minheight='900' sizing-mode='vscroll' />
          <zones>
            <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='30' w='100000' x='0' y='0'>
              <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='98000' id='29' param='vert' w='98400' x='800' y='1000'>
                <zone fixed-size='280' h='97875' id='12' is-fixed='true' name='Type' w='11765' x='500' y='1500'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='97875' id='3' is-fixed='true' name='Sankey' w='74753' x='12265' y='1500'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='97875' id='10' is-fixed='true' name='Country' w='12482' x='87018' y='1500'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{A323EEBC-B58C-40BE-B812-48291E6D34A2}' />
    </dashboard>
    <dashboard name='Country month trend '>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='4' w='100000' x='0' y='0'>
          <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='94000' id='7' param='horz' w='98400' x='800' y='5000'>
            <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='94000' id='5' w='82400' x='800' y='5000'>
              <zone h='85007' id='3' name='COVID19_confirmed page' w='54934' x='800' y='13993'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='47000' id='12' name='COVID19_recovered_page' w='27466' x='55734' y='52000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='47000' id='13' name='COVID19_deaths_page' w='27466' x='55734' y='5000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone _.fcp.SetMembershipControl.false...type='currpage' _.fcp.SetMembershipControl.true...type-v2='currpage' count='2' h='8993' id='9' name='COVID19_confirmed page' name1='COVID19_recovered_page' name2='COVID19_deaths_page' synchronized='1' w='54934' x='800' y='5000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' fixed-size='160' h='94000' id='6' is-fixed='true' param='vert' w='16000' x='83200' y='5000'>
              <zone _.fcp.SetMembershipControl.false...type='color' _.fcp.SetMembershipControl.true...type-v2='color' h='94000' id='8' name='COVID19_confirmed page' pane-specification-id='0' param='[federated.1ukkj5517ipw851d8k09o05hcg93].[none:Country (cov19_date_country_count.csv):nk]' w='16000' x='83200' y='5000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone _.fcp.SetMembershipControl.false...type='text' _.fcp.SetMembershipControl.true...type-v2='text' h='4000' id='16' w='98400' x='800' y='1000'>
            <formatted-text>
              <run bold='true' fontcolor='#59a14f' fontsize='15'>COVID19 Country Trend by Month</run>
            </formatted-text>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1100' minheight='1100' sizing-mode='vscroll' />
          <zones>
            <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='44' w='100000' x='0' y='0'>
              <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='98000' id='43' param='vert' w='98400' x='800' y='1000'>
                <zone _.fcp.SetMembershipControl.false...type='text' _.fcp.SetMembershipControl.true...type-v2='text' h='4000' id='16' w='98400' x='800' y='1000'>
                  <formatted-text>
                    <run bold='true' fontcolor='#59a14f' fontsize='15'>COVID19 Country Trend by Month</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='47000' id='13' is-fixed='true' name='COVID19_deaths_page' w='27466' x='55734' y='5000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='85007' id='3' is-fixed='true' name='COVID19_confirmed page' w='54934' x='800' y='13993'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone _.fcp.SetMembershipControl.false...type='color' _.fcp.SetMembershipControl.true...type-v2='color' h='94000' id='8' name='COVID19_confirmed page' pane-specification-id='0' param='[federated.1ukkj5517ipw851d8k09o05hcg93].[none:Country (cov19_date_country_count.csv):nk]' w='16000' x='83200' y='5000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='47000' id='12' is-fixed='true' name='COVID19_recovered_page' w='27466' x='55734' y='52000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone _.fcp.SetMembershipControl.false...type='currpage' _.fcp.SetMembershipControl.true...type-v2='currpage' count='2' h='8993' id='9' name='COVID19_confirmed page' name1='COVID19_recovered_page' name2='COVID19_deaths_page' synchronized='1' w='54934' x='800' y='5000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{14427108-8113-4324-8854-4CA322E9BA89}' />
    </dashboard>
  </dashboards>
  <windows source-height='93'>
    <window class='worksheet' maximized='true' name='COVID_19_mortality_rate'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.00wkklw1tfbk4w16c9h1s12blyis].[sum:Calculation_4102427483369193472:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.00wkklw1tfbk4w16c9h1s12blyis].[none:Country:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{866F0DFA-AA6A-4842-9D7B-C0380CAEF348}' />
    </window>
    <window class='dashboard' name='Country month trend '>
      <viewpoints>
        <viewpoint name='COVID19_confirmed page'>
          <current-page>
            <multibucket>
              <bucket>#2020-06-01 00:00:00#</bucket>
            </multibucket>
          </current-page>
          <highlight>
            <color-one-way>
              <field>[federated.1ukkj5517ipw851d8k09o05hcg93].[none:Country (cov19_date_country_count.csv):nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='COVID19_deaths_page'>
          <current-page>
            <multibucket>
              <bucket>#2020-06-01 00:00:00#</bucket>
            </multibucket>
          </current-page>
        </viewpoint>
        <viewpoint name='COVID19_recovered_page'>
          <current-page>
            <multibucket>
              <bucket>#2020-06-01 00:00:00#</bucket>
            </multibucket>
          </current-page>
        </viewpoint>
      </viewpoints>
      <active id='9' />
      <simple-id uuid='{11F8D54E-7D63-451C-B0DE-5602E3754884}' />
    </window>
    <window class='dashboard' name='COVID19_Sankeychar'>
      <viewpoints>
        <viewpoint name='Country'>
          <zoom type='entire-view' />
          <highlight field='[federated.0axu3yq0bos93d101yqpk0yd5z2i (copy)].[none:F1:nk]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
        <viewpoint name='Sankey'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Type'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='3' />
      <simple-id uuid='{D8A7F3AD-35EA-4735-AD50-016A951801B1}' />
    </window>
    <window class='worksheet' hidden='true' name='COVID19_confirmed page'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1ukkj5517ipw851d8k09o05hcg93].[none:Country (cov19_date_country_count.csv):nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.1ukkj5517ipw851d8k09o05hcg93].[none:Country (cov19_date_country_count.csv):nk]' type='color' />
            <card type='currpage' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>#2020-06-01 00:00:00#</bucket>
          </multibucket>
        </current-page>
        <highlight>
          <color-one-way>
            <field>[federated.1ukkj5517ipw851d8k09o05hcg93].[none:Country (cov19_date_country_count.csv):nk]</field>
            <field>[federated.1ukkj5517ipw851d8k09o05hcg93].[yr:Date (cov19_date_country_count.csv):ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{C871EEBE-78AD-4ACA-BFC7-3424624175CF}' />
    </window>
    <window class='worksheet' hidden='true' name='COVID19_deaths_page'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1ukkj5517ipw851d8k09o05hcg93].[none:Country (cov19_date_country_count.csv):nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.1ukkj5517ipw851d8k09o05hcg93].[none:Country (cov19_date_country_count.csv):nk]' type='color' />
            <card type='currpage' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>#2020-06-01 00:00:00#</bucket>
          </multibucket>
        </current-page>
        <highlight>
          <color-one-way>
            <field>[federated.1ukkj5517ipw851d8k09o05hcg93].[none:Country (cov19_date_country_count.csv):nk]</field>
            <field>[federated.1ukkj5517ipw851d8k09o05hcg93].[yr:Date (cov19_date_country_count.csv):ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{8A5A4C39-42F5-4BDE-B03F-78C2D28FB81D}' />
    </window>
    <window class='worksheet' hidden='true' name='COVID19_recovered_page'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1ukkj5517ipw851d8k09o05hcg93].[none:Country (cov19_date_country_count.csv):nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.1ukkj5517ipw851d8k09o05hcg93].[none:Country (cov19_date_country_count.csv):nk]' type='color' />
            <card type='currpage' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>#2020-06-01 00:00:00#</bucket>
          </multibucket>
        </current-page>
        <highlight>
          <color-one-way>
            <field>[federated.1ukkj5517ipw851d8k09o05hcg93].[none:Country (cov19_date_country_count.csv):nk]</field>
            <field>[federated.1ukkj5517ipw851d8k09o05hcg93].[yr:Date (cov19_date_country_count.csv):ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{15F1EF8C-BF23-4674-8AF8-A1A04277F788}' />
    </window>
    <window class='worksheet' hidden='true' name='Country'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0axu3yq0bos93d101yqpk0yd5z2i (copy)].[none:F1:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0axu3yq0bos93d101yqpk0yd5z2i (copy)].[none:F1:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{CEF78D8B-0A17-48BA-8DD7-C1469A957CA2}' />
    </window>
    <window class='worksheet' hidden='true' name='Sankey'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.0axu3yq0bos93d101yqpk0yd5z2i (copy)].[none:F2:nk]' type='color' />
            <card pane-specification-id='1' param='[federated.0axu3yq0bos93d101yqpk0yd5z2i (copy)].[usr:Calculation_4228246797991481346:qk:3]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0axu3yq0bos93d101yqpk0yd5z2i (copy)].[none:F1:nk]</field>
            <field>[federated.0axu3yq0bos93d101yqpk0yd5z2i (copy)].[none:F2:nk]</field>
            <field>[federated.0axu3yq0bos93d101yqpk0yd5z2i (copy)].[none:F4 (bin):ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{8AB3C994-9427-4691-B038-A6DCEA638040}' />
    </window>
    <window class='worksheet' hidden='true' name='Type'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0axu3yq0bos93d101yqpk0yd5z2i (copy)].[none:F2:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0axu3yq0bos93d101yqpk0yd5z2i (copy)].[none:F2:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{A9C01162-C1C4-40A6-B0A5-9FF29B1084A6}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='COVID19_Sankeychar' width='192'>
      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
      gg==
    </thumbnail>
    <thumbnail height='192' name='COVID_19_mortality_rate' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Country month trend ' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
